/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import ClasesBase.Alumno;
import ClasesBase.Managers.*;
import ClasesBase.Pago;
import ClasesBase.RegistroAsistencia;
import ClasesBase.Retiro;
import ClasesBase.Sala;
import ClasesBase.Tutor;
import java.awt.CardLayout;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Facu SSD
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private DefaultTableModel modelAlumnos;
    private DefaultTableModel modelCuotas;
    private DefaultTableModel modelControl;
    private DefaultTableModel modelOtros;
    private List<Alumno> listaAlumnos;
    private Set<Tutor> tutoresSelecionados;
    private Alumno alumnoSeleccionado;
    private Pago pagoSeleccionado;
    private boolean nuevo;
    private boolean asignarHermano;
    private boolean primera = true; //Si sacas de aca la asignacion, se rompe.
    
    public VentanaPrincipal() {
        initComponents();
        primera = true;
        asignarHermano = false;
        jDialogBuscar.setLocationRelativeTo(null);
        ManagerAlumno ma = ManagerAlumno.getManager();
        listaAlumnos = ma.obtenerTodosAlumno();
        jTablePago.setDragEnabled(false);
        jTableCuotas.setDragEnabled(false);
        jTableControlPagos.setDragEnabled(false);
        jTableAlumnosDialog.setDragEnabled(false);
        jTableDatosAlumnos.setDragEnabled(false);
        modelAlumnos = (DefaultTableModel) jTablePago.getModel();
        modelCuotas = (DefaultTableModel) jTableCuotas.getModel();
        modelControl = (DefaultTableModel) jTableControlPagos.getModel();
        modelOtros = (DefaultTableModel) jTableControlOtros.getModel();
        jSpinner_Cuotas_PagoIns.setEditor(new JSpinner.DefaultEditor(jSpinner_Cuotas_PagoIns));
        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel();
        modeloSpinner.setMaximum(4);
        modeloSpinner.setMinimum(1);
        jSpinner_Cuotas_PagoIns.setModel(modeloSpinner);
        Calendar cal= Calendar.getInstance();
        jYearChooserCicloLectivo.setStartYear(cal.get(Calendar.YEAR));
        JSpinner spinner = (JSpinner)jYearChooserCicloLectivo.getSpinner();
        ((javax.swing.JTextField)spinner.getEditor()).setEditable(false);
        jYearChooserCicloLectivoInsc.setStartYear(cal.get(Calendar.YEAR));
        JSpinner spinneri = (JSpinner)jYearChooserCicloLectivo.getSpinner();
        ((javax.swing.JTextField)spinneri.getEditor()).setEditable(false);
        jYearChooserControl.setStartYear(cal.get(Calendar.YEAR));
        JSpinner spinnerc = (JSpinner)jYearChooserControl.getSpinner();
        ((javax.swing.JTextField)spinneri.getEditor()).setEditable(false);
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogBuscar = new javax.swing.JDialog();
        jPanelFondoDialog = new javax.swing.JPanel();
        jPanelDetalles = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jTextField_BusquedaDialog = new javax.swing.JTextField();
        jComboBox_TipoDialog = new javax.swing.JComboBox<>();
        jComboBox_SalaDialog = new javax.swing.JComboBox<>();
        jComboBox_TurnoDialog = new javax.swing.JComboBox<>();
        jPanelTabla = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAlumnosDialog = new javax.swing.JTable();
        jPanelFondo = new javax.swing.JPanel();
        jPanelInterseccion = new javax.swing.JPanel();
        jPanelPestanas = new javax.swing.JPanel();
        jPanelOpInscripcion = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanelOpPago = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelOpDatosAlumnos = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jPanelOpControlPagos = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        jPanelTitulo = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jPanelCard = new javax.swing.JPanel();
        jPanelInscripcion = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField_LugarNacimiento = new javax.swing.JTextField();
        jTextField_ApyNom = new javax.swing.JTextField();
        jComboBoxSala_Insc = new javax.swing.JComboBox<>();
        jTextField_Edad = new javax.swing.JTextField();
        jTextField_Domicilio = new javax.swing.JTextField();
        jTextField_Telefono = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxTurno_Insc = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOtrosDatos = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jTextField_NumDoc_Padre = new javax.swing.JTextField();
        jTextField_ApyNom_Padre = new javax.swing.JTextField();
        jTextField_Ocupacion_Padre = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField_NumDoc_Madre = new javax.swing.JTextField();
        jTextField_ApyNom_Madre = new javax.swing.JTextField();
        jTextField_Ocupacion_Madre = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextField_ApyNom_Tutor = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField_NumDoc_Tutor = new javax.swing.JTextField();
        jTextField_Ocupacion_Tutor = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField_Relacion = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jTextField_TelPer_Padre = new javax.swing.JTextField();
        jTextField_TelTra_Padre = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jTextField_TelPer_Madre = new javax.swing.JTextField();
        jTextField_TelTra_Madre = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jTextField_TelPer_Tutor = new javax.swing.JTextField();
        jTextField_TelTra_Tutor = new javax.swing.JTextField();
        jDateChooserFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel52 = new javax.swing.JLabel();
        jTextField_DNI_Ins = new javax.swing.JTextField();
        jCheckBoxTraeMateriales = new javax.swing.JCheckBox();
        jCheckBoxMedico = new javax.swing.JCheckBox();
        jCheckBoxVacunas = new javax.swing.JCheckBox();
        jCheckBoxNatacion = new javax.swing.JCheckBox();
        jButton_Inscribir = new javax.swing.JButton();
        jRadioButtonAgregarTutor = new javax.swing.JRadioButton();
        jRadioButtonAgregarPadre = new javax.swing.JRadioButton();
        jRadioButtonAgregarMadre = new javax.swing.JRadioButton();
        jButtonBuscarAlumBD = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel77 = new javax.swing.JLabel();
        jYearChooserCicloLectivoInsc = new com.toedter.calendar.JYearChooser();
        jPanelPago = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jComboBoxTipoDePago = new javax.swing.JComboBox<>();
        jPanelTipoPago = new javax.swing.JPanel();
        jPanelPagpInsc = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField_Sala_PagoIns = new javax.swing.JTextField();
        jTextField_NomyAp_PagoIns = new javax.swing.JTextField();
        jTextField_Turno_PagoIns = new javax.swing.JTextField();
        jSpinner_Cuotas_PagoIns = new javax.swing.JSpinner();
        jLabel49 = new javax.swing.JLabel();
        jYearChooserCicloLectivo = new com.toedter.calendar.JYearChooser();
        jLabelTotalPagado = new javax.swing.JLabel();
        jLabelMontoRestante = new javax.swing.JLabel();
        jLabelMontoAPagar = new javax.swing.JLabel();
        jButtonRegistrarPago = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableCuotas = new javax.swing.JTable();
        jPanelCuota = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jTextFieldBusqueda_Pago = new javax.swing.JTextField();
        jComboBoxBusqueda_Pago = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePago = new javax.swing.JTable();
        jComboBoxSalaPago = new javax.swing.JComboBox<>();
        jComboBoxTurnoPago = new javax.swing.JComboBox<>();
        jPanelDatosAlumnos = new javax.swing.JPanel();
        jPanelFondoDatosAlumnos = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jTextFieldBusqueda_Datos = new javax.swing.JTextField();
        jComboBoxSalaDatos = new javax.swing.JComboBox<>();
        jComboBoxTurnoDatos = new javax.swing.JComboBox<>();
        jComboBoxBusqueda_Datos = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableDatosAlumnos = new javax.swing.JTable();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel_TelefonoEmergencia = new javax.swing.JLabel();
        jLabel_Domicilio = new javax.swing.JLabel();
        jLabel_Edad = new javax.swing.JLabel();
        jLabel_Dni = new javax.swing.JLabel();
        jLabel_LugarNacimiento = new javax.swing.JLabel();
        jLabel_FechaNacimiento = new javax.swing.JLabel();
        jLabel_NombreYApellido = new javax.swing.JLabel();
        jLabel_Sala = new javax.swing.JLabel();
        jLabel_OtrosDatos = new javax.swing.JLabel();
        jLabel_TraeMateriales = new javax.swing.JLabel();
        jLabel_ControlMedico = new javax.swing.JLabel();
        jLabel_Vacunas = new javax.swing.JLabel();
        jLabel_ControlNatacion = new javax.swing.JLabel();
        jLabel_Padre = new javax.swing.JLabel();
        jLabel_TelefonoPersonalPadre = new javax.swing.JLabel();
        jLabel_TelefonoTrabajoPadre = new javax.swing.JLabel();
        jLabel_Madre = new javax.swing.JLabel();
        jLabel_TelefonoPersonalMadre = new javax.swing.JLabel();
        jLabel_TelefonoTrabajoMadre = new javax.swing.JLabel();
        jLabel_Tutor = new javax.swing.JLabel();
        jLabel_TelefonoPersonalTutor = new javax.swing.JLabel();
        jLabel_TelefonoTrabajoTutor = new javax.swing.JLabel();
        jPanelControlPagos = new javax.swing.JPanel();
        jPanelFondoControlPagos = new javax.swing.JPanel();
        jProgressBarSalaTotal = new javax.swing.JProgressBar();
        jProgressBarSala5 = new javax.swing.JProgressBar();
        jProgressBarSala4 = new javax.swing.JProgressBar();
        jProgressBarSala3 = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        jTextFieldBusqueda_Control = new javax.swing.JTextField();
        jComboBoxBusqueda_Control = new javax.swing.JComboBox<>();
        jComboBoxSalaControl = new javax.swing.JComboBox<>();
        jComboBoxTurnoControl = new javax.swing.JComboBox<>();
        jComboBoxTipoControl = new javax.swing.JComboBox<>();
        jPanelCardControl = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableControlOtros = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableControlPagos = new javax.swing.JTable();
        jYearChooserControl = new com.toedter.calendar.JYearChooser();
        jPanelBarraSup = new javax.swing.JPanel();
        jPanelCerrar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelMinimizar = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jDialogBuscar.setAlwaysOnTop(true);
        jDialogBuscar.setMinimumSize(new java.awt.Dimension(700, 480));
        jDialogBuscar.setModal(true);
        jDialogBuscar.setName("Buscar"); // NOI18N
        jDialogBuscar.setResizable(false);

        jLabel53.setText("Buscar alumno");

        jTextField_BusquedaDialog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_BusquedaDialogKeyReleased(evt);
            }
        });

        jComboBox_TipoDialog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apellido y Nombre", "DNI" }));
        jComboBox_TipoDialog.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_TipoDialogItemStateChanged(evt);
            }
        });

        jComboBox_SalaDialog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala", "5 años", "4 años", "3 años" }));
        jComboBox_SalaDialog.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_SalaDialogItemStateChanged(evt);
            }
        });

        jComboBox_TurnoDialog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turno", "Mañana", "Tarde" }));
        jComboBox_TurnoDialog.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_TurnoDialogItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelDetallesLayout = new javax.swing.GroupLayout(jPanelDetalles);
        jPanelDetalles.setLayout(jPanelDetallesLayout);
        jPanelDetallesLayout.setHorizontalGroup(
            jPanelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetallesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel53)
                .addGap(18, 18, 18)
                .addComponent(jTextField_BusquedaDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_TipoDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_SalaDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_TurnoDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDetallesLayout.setVerticalGroup(
            jPanelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetallesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(jTextField_BusquedaDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_TipoDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_SalaDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_TurnoDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTableAlumnosDialog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido y nombre", "DNI", "Sala", "Turno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAlumnosDialog.setRowSelectionAllowed(false);
        jTableAlumnosDialog.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableAlumnosDialog.getTableHeader().setResizingAllowed(false);
        jTableAlumnosDialog.getTableHeader().setReorderingAllowed(false);
        jTableAlumnosDialog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlumnosDialogMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableAlumnosDialog);

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelFondoDialogLayout = new javax.swing.GroupLayout(jPanelFondoDialog);
        jPanelFondoDialog.setLayout(jPanelFondoDialogLayout);
        jPanelFondoDialogLayout.setHorizontalGroup(
            jPanelFondoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelDetalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelFondoDialogLayout.setVerticalGroup(
            jPanelFondoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoDialogLayout.createSequentialGroup()
                .addComponent(jPanelDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jDialogBuscarLayout = new javax.swing.GroupLayout(jDialogBuscar.getContentPane());
        jDialogBuscar.getContentPane().setLayout(jDialogBuscarLayout);
        jDialogBuscarLayout.setHorizontalGroup(
            jDialogBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondoDialog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogBuscarLayout.setVerticalGroup(
            jDialogBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogBuscarLayout.createSequentialGroup()
                .addComponent(jPanelFondoDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jardin Ñandeni");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1360, 768));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1360, 768));

        jPanelInterseccion.setMaximumSize(new java.awt.Dimension(150, 100));
        jPanelInterseccion.setMinimumSize(new java.awt.Dimension(150, 100));
        jPanelInterseccion.setPreferredSize(new java.awt.Dimension(150, 100));

        javax.swing.GroupLayout jPanelInterseccionLayout = new javax.swing.GroupLayout(jPanelInterseccion);
        jPanelInterseccion.setLayout(jPanelInterseccionLayout);
        jPanelInterseccionLayout.setHorizontalGroup(
            jPanelInterseccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );
        jPanelInterseccionLayout.setVerticalGroup(
            jPanelInterseccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanelOpInscripcion.setBackground(new java.awt.Color(112, 163, 204));
        jPanelOpInscripcion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanelOpInscripcion.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanelOpInscripcion.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpInscripcionMouseMoved(evt);
            }
        });
        jPanelOpInscripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpInscripcionMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelOpInscripcionMousePressed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Inscripcion para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelOpInscripcionLayout = new javax.swing.GroupLayout(jPanelOpInscripcion);
        jPanelOpInscripcion.setLayout(jPanelOpInscripcionLayout);
        jPanelOpInscripcionLayout.setHorizontalGroup(
            jPanelOpInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpInscripcionLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, 0))
        );
        jPanelOpInscripcionLayout.setVerticalGroup(
            jPanelOpInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOpInscripcionLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelOpPago.setBackground(new java.awt.Color(132, 183, 224));
        jPanelOpPago.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanelOpPago.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpPagoMouseMoved(evt);
            }
        });
        jPanelOpPago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpPagoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelOpPagoMousePressed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Pago para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelOpPagoLayout = new javax.swing.GroupLayout(jPanelOpPago);
        jPanelOpPago.setLayout(jPanelOpPagoLayout);
        jPanelOpPagoLayout.setHorizontalGroup(
            jPanelOpPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpPagoLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelOpPagoLayout.setVerticalGroup(
            jPanelOpPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpPagoLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelOpDatosAlumnos.setBackground(new java.awt.Color(112, 163, 204));
        jPanelOpDatosAlumnos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpDatosAlumnosMouseMoved(evt);
            }
        });
        jPanelOpDatosAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpDatosAlumnosMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelOpDatosAlumnosMousePressed(evt);
            }
        });

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Datos para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelOpDatosAlumnosLayout = new javax.swing.GroupLayout(jPanelOpDatosAlumnos);
        jPanelOpDatosAlumnos.setLayout(jPanelOpDatosAlumnosLayout);
        jPanelOpDatosAlumnosLayout.setHorizontalGroup(
            jPanelOpDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpDatosAlumnosLayout.createSequentialGroup()
                .addComponent(jLabel50)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelOpDatosAlumnosLayout.setVerticalGroup(
            jPanelOpDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanelOpControlPagos.setBackground(new java.awt.Color(132, 183, 224));
        jPanelOpControlPagos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpControlPagosMouseMoved(evt);
            }
        });
        jPanelOpControlPagos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpControlPagosMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelOpControlPagosMousePressed(evt);
            }
        });

        jLabel78.setText("Control Pagos");

        javax.swing.GroupLayout jPanelOpControlPagosLayout = new javax.swing.GroupLayout(jPanelOpControlPagos);
        jPanelOpControlPagos.setLayout(jPanelOpControlPagosLayout);
        jPanelOpControlPagosLayout.setHorizontalGroup(
            jPanelOpControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpControlPagosLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel78)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOpControlPagosLayout.setVerticalGroup(
            jPanelOpControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpControlPagosLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel78)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelPestanasLayout = new javax.swing.GroupLayout(jPanelPestanas);
        jPanelPestanas.setLayout(jPanelPestanasLayout);
        jPanelPestanasLayout.setHorizontalGroup(
            jPanelPestanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPestanasLayout.createSequentialGroup()
                .addGroup(jPanelPestanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelOpPago, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jPanelOpInscripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jPanelOpDatosAlumnos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanelOpControlPagos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelPestanasLayout.setVerticalGroup(
            jPanelPestanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPestanasLayout.createSequentialGroup()
                .addComponent(jPanelOpInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOpPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOpDatosAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOpControlPagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Jardin Ñandeni para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelTituloLayout = new javax.swing.GroupLayout(jPanelTitulo);
        jPanelTitulo.setLayout(jPanelTituloLayout);
        jPanelTituloLayout.setHorizontalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addComponent(jLabel51)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelTituloLayout.setVerticalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addComponent(jLabel51)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelCard.setLayout(new java.awt.CardLayout());

        jLabel3.setText("Ficha de Inscripción y legajo");

        jLabel6.setText("Datos del alumno");

        jLabel7.setText("Sala");

        jLabel8.setText("Apellido y Nombre");

        jLabel9.setText("Fecha de Nacimiento");

        jLabel10.setText("Lugar de Nacimiento");

        jLabel11.setText("Edad");

        jLabel12.setText("Domicilio");

        jLabel13.setText("Telefono");

        jComboBoxSala_Insc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 Años", "4 Años", "5 Años" }));

        jTextField_Edad.setEditable(false);
        jTextField_Edad.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setText("Turno");

        jComboBoxTurno_Insc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mañana", "Tarde" }));

        jLabel15.setText("Otros Datos");

        jTextAreaOtrosDatos.setColumns(20);
        jTextAreaOtrosDatos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAreaOtrosDatos.setRows(5);
        jTextAreaOtrosDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextAreaOtrosDatos);

        jLabel17.setText("Apellido y Nombre");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel19.setText("Número de Documento");

        jLabel20.setText("Ocupacion");

        jLabel21.setText("Datos del padre");

        jLabel22.setText("Datos de la madre");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel16.setText("Apellido y Nombre");

        jLabel24.setText("Número de Documento");

        jLabel25.setText("Ocupacion");

        jLabel26.setText("Datos del tutor");

        jLabel27.setText("En caso de no ser los padres");
        jLabel27.setEnabled(false);

        jLabel28.setText("Apellido y Nombre");
        jLabel28.setEnabled(false);

        jTextField_ApyNom_Tutor.setEnabled(false);

        jLabel30.setText("Numero de Documento");
        jLabel30.setEnabled(false);

        jLabel31.setText("Ocupacion");
        jLabel31.setEnabled(false);

        jTextField_NumDoc_Tutor.setEnabled(false);

        jTextField_Ocupacion_Tutor.setEnabled(false);

        jLabel32.setText("Relación");
        jLabel32.setEnabled(false);

        jTextField_Relacion.setEnabled(false);

        jLabel42.setText("Telefono Personal");

        jLabel44.setText("Telefono Trabajo");

        jLabel45.setText("Telefono Personal");

        jLabel46.setText("Telefono Trabajo");

        jLabel47.setText("Telefono Personal");
        jLabel47.setEnabled(false);

        jLabel48.setText("Telefono Trabajo");
        jLabel48.setEnabled(false);

        jTextField_TelPer_Tutor.setEnabled(false);

        jTextField_TelTra_Tutor.setEnabled(false);

        jDateChooserFechaNacimiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserFechaNacimientoPropertyChange(evt);
            }
        });

        jLabel52.setText("DNI (sin puntos)");

        jCheckBoxTraeMateriales.setText("Trae Materiales");

        jCheckBoxMedico.setText("Control Médico");

        jCheckBoxVacunas.setText("Vacunas");

        jCheckBoxNatacion.setText("Control Natacion");

        jButton_Inscribir.setText("Inscribir");
        jButton_Inscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InscribirActionPerformed(evt);
            }
        });

        jRadioButtonAgregarTutor.setText("Incluir");
        jRadioButtonAgregarTutor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonAgregarTutorStateChanged(evt);
            }
        });

        jRadioButtonAgregarPadre.setSelected(true);
        jRadioButtonAgregarPadre.setText("Incluir");
        jRadioButtonAgregarPadre.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonAgregarPadreStateChanged(evt);
            }
        });

        jRadioButtonAgregarMadre.setSelected(true);
        jRadioButtonAgregarMadre.setText("Incluir");
        jRadioButtonAgregarMadre.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonAgregarMadreStateChanged(evt);
            }
        });

        jButtonBuscarAlumBD.setText("Buscar Alumno en Base de Datos");
        jButtonBuscarAlumBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarAlumBDActionPerformed(evt);
            }
        });

        jButton1.setText("Reiniciar Formulario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel77.setText("Ciclo Lectivo");

        javax.swing.GroupLayout jPanelInscripcionLayout = new javax.swing.GroupLayout(jPanelInscripcion);
        jPanelInscripcion.setLayout(jPanelInscripcionLayout);
        jPanelInscripcionLayout.setHorizontalGroup(
            jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addComponent(jComboBoxSala_Insc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14)
                                .addGap(30, 30, 30)
                                .addComponent(jComboBoxTurno_Insc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jDateChooserFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_ApyNom)))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel52))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_LugarNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(jTextField_Edad)
                            .addComponent(jTextField_Domicilio)
                            .addComponent(jTextField_DNI_Ins)
                            .addComponent(jTextField_Telefono)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxTraeMateriales)
                                    .addComponent(jCheckBoxVacunas))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxNatacion)
                                    .addComponent(jCheckBoxMedico))))))
                .addGap(42, 42, 42)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel22))
                        .addGap(302, 302, 302)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_TelTra_Tutor)
                            .addComponent(jTextField_ApyNom_Tutor)
                            .addComponent(jTextField_NumDoc_Tutor)
                            .addComponent(jTextField_Ocupacion_Tutor)
                            .addComponent(jTextField_Relacion)
                            .addComponent(jTextField_TelPer_Tutor, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                    .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                            .addGap(134, 134, 134)
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jTextField_NumDoc_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_ApyNom_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jRadioButtonAgregarMadre)
                                                .addComponent(jTextField_Ocupacion_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TelPer_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TelTra_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInscripcionLayout.createSequentialGroup()
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel17)
                                                .addComponent(jLabel19)
                                                .addComponent(jLabel20)
                                                .addComponent(jLabel42)
                                                .addComponent(jLabel44)
                                                .addComponent(jLabel21))
                                            .addGap(21, 21, 21)
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jTextField_ApyNom_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_NumDoc_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_Ocupacion_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TelPer_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TelTra_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jRadioButtonAgregarPadre))))
                                    .addGap(18, 18, 18)))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel46))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel48)
                                    .addComponent(jLabel47)))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jButton1))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                        .addComponent(jLabel77)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jYearChooserCicloLectivoInsc, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonBuscarAlumBD)))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(jButton_Inscribir))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                        .addComponent(jRadioButtonAgregarTutor))
                                    .addComponent(jLabel28))))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanelInscripcionLayout.setVerticalGroup(
            jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator4)
            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(34, 34, 34)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBoxSala_Insc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBoxTurno_Insc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField_ApyNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jDateChooserFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField_LugarNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(jTextField_DNI_Ins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField_Domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxTraeMateriales)
                            .addComponent(jCheckBoxMedico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxVacunas)
                            .addComponent(jCheckBoxNatacion)))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel27)
                                    .addComponent(jRadioButtonAgregarTutor))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel28)
                                    .addComponent(jTextField_ApyNom_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30)
                                    .addComponent(jTextField_NumDoc_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel31)
                                    .addComponent(jTextField_Ocupacion_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel32)
                                    .addComponent(jTextField_Relacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel47)
                                    .addComponent(jTextField_TelPer_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel48)
                                    .addComponent(jTextField_TelTra_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addComponent(jButtonBuscarAlumBD)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel77))
                            .addComponent(jYearChooserCicloLectivoInsc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Inscribir))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jRadioButtonAgregarPadre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField_ApyNom_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jTextField_NumDoc_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jTextField_Ocupacion_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(jTextField_TelPer_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(jTextField_TelTra_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jRadioButtonAgregarMadre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField_ApyNom_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jTextField_NumDoc_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jTextField_Ocupacion_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45)
                            .addComponent(jTextField_TelPer_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addComponent(jTextField_TelTra_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(206, Short.MAX_VALUE))
        );

        jPanelCard.add(jPanelInscripcion, "inscripcion");

        jLabel2.setText("Tipo de pago");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jComboBoxTipoDePago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inscripcion", "Cuota", "Materiales", "SAC", "Natacion" }));
        jComboBoxTipoDePago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoDePagoItemStateChanged(evt);
            }
        });

        jPanelTipoPago.setLayout(new java.awt.CardLayout());

        jLabel34.setText("Apellido y Nombre");

        jLabel35.setText("Sala");

        jLabel36.setText("Turno");

        jLabel37.setText("Cuotas");

        jLabel38.setText("Total pagado");

        jLabel39.setText("Monto restante");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel40.setText("Monto a pagar");

        jSpinner_Cuotas_PagoIns.setModel(new javax.swing.SpinnerNumberModel(1, 1, 4, 1));
        jSpinner_Cuotas_PagoIns.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_Cuotas_PagoInsStateChanged(evt);
            }
        });

        jLabel49.setText("Ciclo Lectivo");

        jYearChooserCicloLectivo.setVerifyInputWhenFocusTarget(false);
        jYearChooserCicloLectivo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jYearChooserCicloLectivoPropertyChange(evt);
            }
        });

        jLabelTotalPagado.setText("jLabel53");

        jLabelMontoRestante.setText("jLabel53");

        jLabelMontoAPagar.setText("jLabel53");

        jButtonRegistrarPago.setText("Registrar pago");
        jButtonRegistrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarPagoActionPerformed(evt);
            }
        });

        jTableCuotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro. de cuota", "Fecha de pago", "Pagado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCuotas.setRowSelectionAllowed(false);
        jTableCuotas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableCuotas.getTableHeader().setResizingAllowed(false);
        jTableCuotas.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTableCuotas);

        javax.swing.GroupLayout jPanelPagpInscLayout = new javax.swing.GroupLayout(jPanelPagpInsc);
        jPanelPagpInsc.setLayout(jPanelPagpInscLayout);
        jPanelPagpInscLayout.setHorizontalGroup(
            jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                        .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMontoAPagar)
                            .addComponent(jLabelMontoRestante)
                            .addComponent(jLabelTotalPagado)
                            .addComponent(jButtonRegistrarPago)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                        .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_Sala_PagoIns)
                                .addComponent(jTextField_Turno_PagoIns)
                                .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                                    .addComponent(jYearChooserCicloLectivo, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                    .addGap(197, 197, 197)))
                            .addComponent(jTextField_NomyAp_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_Cuotas_PagoIns, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanelPagpInscLayout.setVerticalGroup(
            jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField_NomyAp_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField_Sala_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jTextField_Turno_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49)
                    .addComponent(jYearChooserCicloLectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jSpinner_Cuotas_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabelTotalPagado))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabelMontoRestante))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabelMontoAPagar))
                .addGap(51, 51, 51)
                .addComponent(jButtonRegistrarPago)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        jPanelTipoPago.add(jPanelPagpInsc, "pagoInscripcion");

        jLabel41.setText("Pago cuota");

        javax.swing.GroupLayout jPanelCuotaLayout = new javax.swing.GroupLayout(jPanelCuota);
        jPanelCuota.setLayout(jPanelCuotaLayout);
        jPanelCuotaLayout.setHorizontalGroup(
            jPanelCuotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCuotaLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel41)
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanelCuotaLayout.setVerticalGroup(
            jPanelCuotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCuotaLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel41)
                .addContainerGap(563, Short.MAX_VALUE))
        );

        jPanelTipoPago.add(jPanelCuota, "pagoCuota");

        jLabel43.setText("Buscar Alumno");

        jTextFieldBusqueda_Pago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBusqueda_PagoKeyReleased(evt);
            }
        });

        jComboBoxBusqueda_Pago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apellido y Nombre", "DNI" }));
        jComboBoxBusqueda_Pago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBusqueda_PagoItemStateChanged(evt);
            }
        });

        jTablePago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido y Nombre", "DNI", "Sala", "Turno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePago.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePago.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePago.getTableHeader().setResizingAllowed(false);
        jTablePago.getTableHeader().setReorderingAllowed(false);
        jTablePago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTablePagoMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePago);
        if (jTablePago.getColumnModel().getColumnCount() > 0) {
            jTablePago.getColumnModel().getColumn(0).setResizable(false);
            jTablePago.getColumnModel().getColumn(0).setPreferredWidth(300);
            jTablePago.getColumnModel().getColumn(1).setResizable(false);
            jTablePago.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTablePago.getColumnModel().getColumn(2).setResizable(false);
            jTablePago.getColumnModel().getColumn(3).setResizable(false);
            jTablePago.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        jComboBoxSalaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala", "5 años", "4 años", "3 años" }));
        jComboBoxSalaPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSalaPagoItemStateChanged(evt);
            }
        });

        jComboBoxTurnoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turno", "Mañana", "Tarde" }));
        jComboBoxTurnoPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTurnoPagoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxSalaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTurnoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jTextFieldBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSalaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTurnoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelPagoLayout = new javax.swing.GroupLayout(jPanelPago);
        jPanelPago.setLayout(jPanelPagoLayout);
        jPanelPagoLayout.setHorizontalGroup(
            jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagoLayout.createSequentialGroup()
                .addGroup(jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBoxTipoDePago, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPagoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelPagoLayout.setVerticalGroup(
            jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelPagoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxTipoDePago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTipoPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPagoLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCard.add(jPanelPago, "pago");

        jLabel54.setText("Buscar Alumno");

        jTextFieldBusqueda_Datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBusqueda_DatosKeyReleased(evt);
            }
        });

        jComboBoxSalaDatos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala", "5 años", "4 años", "3 años" }));
        jComboBoxSalaDatos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSalaDatosItemStateChanged(evt);
            }
        });

        jComboBoxTurnoDatos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turno", "Mañana", "Tarde" }));
        jComboBoxTurnoDatos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTurnoDatosItemStateChanged(evt);
            }
        });

        jComboBoxBusqueda_Datos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apellido y Nombre", "DNI" }));
        jComboBoxBusqueda_Datos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBusqueda_DatosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel54)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBusqueda_Datos, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxBusqueda_Datos, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxSalaDatos, 0, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxTurnoDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(jTextFieldBusqueda_Datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSalaDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTurnoDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBusqueda_Datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jTableDatosAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido y Nombre", "DNI", "Sala", "Turno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDatosAlumnos.setRowSelectionAllowed(false);
        jTableDatosAlumnos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableDatosAlumnos.getTableHeader().setResizingAllowed(false);
        jTableDatosAlumnos.getTableHeader().setReorderingAllowed(false);
        jTableDatosAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableDatosAlumnosMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableDatosAlumnos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );

        jLabel55.setText("Sala");

        jLabel56.setText("Apellido y nombre");

        jLabel57.setText("Fecha de Nacimiento");

        jLabel58.setText("Lugar de Nacimiento");

        jLabel59.setText("DNI");

        jLabel60.setText("Edad");

        jLabel61.setText("Domicilio");

        jLabel62.setText("Telefono de emergencia");

        jLabel63.setText("Otros datos");

        jLabel64.setText("Trae Materiales");

        jLabel65.setText("Controles Médicos");

        jLabel66.setText("Vacunas");

        jLabel67.setText("Control Natacion");

        jLabel68.setText("Padre");

        jLabel69.setText("Telefono Personal");

        jLabel70.setText("Telefono Trabajo");

        jLabel71.setText("Madre");

        jLabel72.setText("Telefono Personal");

        jLabel73.setText("Telefono Trabajo");

        jLabel74.setText("Otro tutor");

        jLabel75.setText("Telefono Personal");

        jLabel76.setText("Telefono Trabajo");

        jLabel_TelefonoEmergencia.setText("jLabel77");

        jLabel_Domicilio.setText("jLabel77");

        jLabel_Edad.setText("jLabel77");

        jLabel_Dni.setText("jLabel77");

        jLabel_LugarNacimiento.setText("jLabel77");

        jLabel_FechaNacimiento.setText("jLabel77");

        jLabel_NombreYApellido.setText("jLabel77");

        jLabel_Sala.setText("jLabel77");

        jLabel_OtrosDatos.setText("jLabel77");

        jLabel_TraeMateriales.setText("jLabel77");

        jLabel_ControlMedico.setText("jLabel77");

        jLabel_Vacunas.setText("jLabel77");

        jLabel_ControlNatacion.setText("jLabel77");

        jLabel_Padre.setText("jLabel77");

        jLabel_TelefonoPersonalPadre.setText("jLabel77");

        jLabel_TelefonoTrabajoPadre.setText("jLabel77");

        jLabel_Madre.setText("jLabel77");

        jLabel_TelefonoPersonalMadre.setText("jLabel77");

        jLabel_TelefonoTrabajoMadre.setText("jLabel77");

        jLabel_Tutor.setText("jLabel77");

        jLabel_TelefonoPersonalTutor.setText("jLabel77");

        jLabel_TelefonoTrabajoTutor.setText("jLabel77");

        javax.swing.GroupLayout jPanelFondoDatosAlumnosLayout = new javax.swing.GroupLayout(jPanelFondoDatosAlumnos);
        jPanelFondoDatosAlumnos.setLayout(jPanelFondoDatosAlumnosLayout);
        jPanelFondoDatosAlumnosLayout.setHorizontalGroup(
            jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoDatosAlumnosLayout.createSequentialGroup()
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel62)
                    .addComponent(jLabel61)
                    .addComponent(jLabel60)
                    .addComponent(jLabel59)
                    .addComponent(jLabel58)
                    .addComponent(jLabel57)
                    .addComponent(jLabel56)
                    .addComponent(jLabel55)
                    .addComponent(jLabel63)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel66)
                    .addComponent(jLabel67)
                    .addComponent(jLabel68)
                    .addComponent(jLabel69)
                    .addComponent(jLabel70)
                    .addComponent(jLabel71)
                    .addComponent(jLabel72)
                    .addComponent(jLabel73)
                    .addComponent(jLabel74)
                    .addComponent(jLabel75)
                    .addComponent(jLabel76))
                .addGap(18, 18, 18)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_TelefonoTrabajoTutor)
                    .addComponent(jLabel_TelefonoPersonalTutor)
                    .addComponent(jLabel_Tutor)
                    .addComponent(jLabel_TelefonoTrabajoMadre)
                    .addComponent(jLabel_TelefonoPersonalMadre)
                    .addComponent(jLabel_Madre)
                    .addComponent(jLabel_TelefonoTrabajoPadre)
                    .addComponent(jLabel_TelefonoPersonalPadre)
                    .addComponent(jLabel_Padre)
                    .addComponent(jLabel_ControlNatacion)
                    .addComponent(jLabel_Vacunas)
                    .addComponent(jLabel_ControlMedico)
                    .addComponent(jLabel_TraeMateriales)
                    .addComponent(jLabel_OtrosDatos)
                    .addComponent(jLabel_Sala)
                    .addComponent(jLabel_NombreYApellido)
                    .addComponent(jLabel_FechaNacimiento)
                    .addComponent(jLabel_LugarNacimiento)
                    .addComponent(jLabel_Dni)
                    .addComponent(jLabel_Edad)
                    .addComponent(jLabel_Domicilio)
                    .addComponent(jLabel_TelefonoEmergencia))
                .addGap(0, 302, Short.MAX_VALUE))
        );
        jPanelFondoDatosAlumnosLayout.setVerticalGroup(
            jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoDatosAlumnosLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelFondoDatosAlumnosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(jLabel_Sala))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(jLabel_NombreYApellido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(jLabel_FechaNacimiento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(jLabel_LugarNacimiento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(jLabel_Dni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(jLabel_Edad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(jLabel_Domicilio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(jLabel_TelefonoEmergencia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(jLabel_OtrosDatos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(jLabel_TraeMateriales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(jLabel_ControlMedico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(jLabel_Vacunas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(jLabel_ControlNatacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(jLabel_Padre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jLabel_TelefonoPersonalPadre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(jLabel_TelefonoTrabajoPadre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(jLabel_Madre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(jLabel_TelefonoPersonalMadre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(jLabel_TelefonoTrabajoMadre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(jLabel_Tutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(jLabel_TelefonoPersonalTutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFondoDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(jLabel_TelefonoTrabajoTutor))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelDatosAlumnosLayout = new javax.swing.GroupLayout(jPanelDatosAlumnos);
        jPanelDatosAlumnos.setLayout(jPanelDatosAlumnosLayout);
        jPanelDatosAlumnosLayout.setHorizontalGroup(
            jPanelDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosAlumnosLayout.createSequentialGroup()
                .addComponent(jPanelFondoDatosAlumnos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDatosAlumnosLayout.setVerticalGroup(
            jPanelDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondoDatosAlumnos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanelCard.add(jPanelDatosAlumnos, "datosAlumnos");

        jProgressBarSalaTotal.setOrientation(1);
        jProgressBarSalaTotal.setValue(50);

        jProgressBarSala5.setOrientation(1);
        jProgressBarSala5.setValue(70);

        jProgressBarSala4.setOrientation(1);
        jProgressBarSala4.setValue(30);

        jProgressBarSala3.setOrientation(1);
        jProgressBarSala3.setValue(50);

        jLabel79.setText("Buscar Alumno");

        jTextFieldBusqueda_Control.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBusqueda_ControlKeyReleased(evt);
            }
        });

        jComboBoxBusqueda_Control.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apellido y Nombre", "DNI" }));
        jComboBoxBusqueda_Control.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBusqueda_ControlItemStateChanged(evt);
            }
        });

        jComboBoxSalaControl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala", "5 años", "4 años", "3 años" }));
        jComboBoxSalaControl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSalaControlItemStateChanged(evt);
            }
        });

        jComboBoxTurnoControl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turno", "Mañana", "Tarde" }));
        jComboBoxTurnoControl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTurnoControlItemStateChanged(evt);
            }
        });

        jComboBoxTipoControl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Otros", "Cuotas" }));
        jComboBoxTipoControl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoControlItemStateChanged(evt);
            }
        });

        jPanelCardControl.setLayout(new java.awt.CardLayout());

        jTableControlOtros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido y Nombre", "Sala", "Turno", "Inscripcion", "Materiales", "SAC1", "SAC2", "Nat Abr", "Nat May", "Nat Jun", "Nat Ago", "Nat Sep", "Nat Oct"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTableControlOtros);
        if (jTableControlOtros.getColumnModel().getColumnCount() > 0) {
            jTableControlOtros.getColumnModel().getColumn(0).setMinWidth(125);
            jTableControlOtros.getColumnModel().getColumn(0).setPreferredWidth(125);
            jTableControlOtros.getColumnModel().getColumn(1).setMinWidth(40);
            jTableControlOtros.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTableControlOtros.getColumnModel().getColumn(2).setMinWidth(60);
            jTableControlOtros.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTableControlOtros.getColumnModel().getColumn(3).setMinWidth(90);
            jTableControlOtros.getColumnModel().getColumn(3).setPreferredWidth(90);
            jTableControlOtros.getColumnModel().getColumn(4).setMinWidth(90);
            jTableControlOtros.getColumnModel().getColumn(4).setPreferredWidth(90);
        }

        jPanelCardControl.add(jScrollPane7, "controlOtros");

        jTableControlPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido y Nombre", "Sala", "Turno", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableControlPagos.setRowSelectionAllowed(false);
        jTableControlPagos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableControlPagos.getTableHeader().setResizingAllowed(false);
        jTableControlPagos.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTableControlPagos);
        if (jTableControlPagos.getColumnModel().getColumnCount() > 0) {
            jTableControlPagos.getColumnModel().getColumn(0).setMinWidth(125);
            jTableControlPagos.getColumnModel().getColumn(0).setPreferredWidth(125);
            jTableControlPagos.getColumnModel().getColumn(0).setMaxWidth(125);
        }

        jPanelCardControl.add(jScrollPane6, "controlCuotas");

        jYearChooserControl.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jYearChooserControlPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelCardControl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel79)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldBusqueda_Control, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxBusqueda_Control, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxSalaControl, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTurnoControl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTipoControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jYearChooserControl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 62, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel79)
                        .addComponent(jTextFieldBusqueda_Control, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxBusqueda_Control, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxSalaControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxTurnoControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxTipoControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jYearChooserControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelCardControl, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelFondoControlPagosLayout = new javax.swing.GroupLayout(jPanelFondoControlPagos);
        jPanelFondoControlPagos.setLayout(jPanelFondoControlPagosLayout);
        jPanelFondoControlPagosLayout.setHorizontalGroup(
            jPanelFondoControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFondoControlPagosLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(jProgressBarSala3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBarSala4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBarSala5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBarSalaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelFondoControlPagosLayout.setVerticalGroup(
            jPanelFondoControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoControlPagosLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelFondoControlPagosLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanelFondoControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBarSala3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBarSala4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBarSala5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBarSalaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelControlPagosLayout = new javax.swing.GroupLayout(jPanelControlPagos);
        jPanelControlPagos.setLayout(jPanelControlPagosLayout);
        jPanelControlPagosLayout.setHorizontalGroup(
            jPanelControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondoControlPagos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelControlPagosLayout.setVerticalGroup(
            jPanelControlPagosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlPagosLayout.createSequentialGroup()
                .addComponent(jPanelFondoControlPagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelCard.add(jPanelControlPagos, "controlPagos");

        jPanelCerrar.setBackground(new java.awt.Color(200, 0, 0));
        jPanelCerrar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelCerrarMouseMoved(evt);
            }
        });
        jPanelCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelCerrarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelCerrarMousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("X");

        javax.swing.GroupLayout jPanelCerrarLayout = new javax.swing.GroupLayout(jPanelCerrar);
        jPanelCerrar.setLayout(jPanelCerrarLayout);
        jPanelCerrarLayout.setHorizontalGroup(
            jPanelCerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCerrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCerrarLayout.setVerticalGroup(
            jPanelCerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCerrarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jPanelMinimizar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelMinimizarMouseMoved(evt);
            }
        });
        jPanelMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelMinimizarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelMinimizarMousePressed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel33.setText("_");

        javax.swing.GroupLayout jPanelMinimizarLayout = new javax.swing.GroupLayout(jPanelMinimizar);
        jPanelMinimizar.setLayout(jPanelMinimizarLayout);
        jPanelMinimizarLayout.setHorizontalGroup(
            jPanelMinimizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMinimizarLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel33)
                .addContainerGap())
        );
        jPanelMinimizarLayout.setVerticalGroup(
            jPanelMinimizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel33)
        );

        javax.swing.GroupLayout jPanelBarraSupLayout = new javax.swing.GroupLayout(jPanelBarraSup);
        jPanelBarraSup.setLayout(jPanelBarraSupLayout);
        jPanelBarraSupLayout.setHorizontalGroup(
            jPanelBarraSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBarraSupLayout.createSequentialGroup()
                .addContainerGap(1291, Short.MAX_VALUE)
                .addComponent(jPanelMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanelBarraSupLayout.setVerticalGroup(
            jPanelBarraSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBarraSupLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelBarraSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMinimizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanelFondoLayout = new javax.swing.GroupLayout(jPanelFondo);
        jPanelFondo.setLayout(jPanelFondoLayout);
        jPanelFondoLayout.setHorizontalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFondoLayout.createSequentialGroup()
                        .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanelInterseccion, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addGroup(jPanelFondoLayout.createSequentialGroup()
                                .addComponent(jPanelPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelCard, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanelFondoLayout.createSequentialGroup()
                        .addComponent(jPanelBarraSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelFondoLayout.setVerticalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addComponent(jPanelBarraSup, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelInterseccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPestanas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelCerrarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCerrarMouseMoved
        jPanelCerrar.setBackground(Color.red);
    }//GEN-LAST:event_jPanelCerrarMouseMoved

    private void jPanelCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCerrarMouseExited
        jPanelCerrar.setBackground(new Color(200, 0, 0));
    }//GEN-LAST:event_jPanelCerrarMouseExited

    private void jPanelOpInscripcionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpInscripcionMouseExited
        jPanelOpInscripcion.setBackground(new Color(112, 163, 204));
    }//GEN-LAST:event_jPanelOpInscripcionMouseExited

    private void jPanelOpInscripcionMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpInscripcionMouseMoved
        jPanelOpInscripcion.setBackground(new Color(142, 193, 234));
    }//GEN-LAST:event_jPanelOpInscripcionMouseMoved

    private void jPanelOpPagoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpPagoMouseMoved
        jPanelOpPago.setBackground(new Color(162, 213, 254));
    }//GEN-LAST:event_jPanelOpPagoMouseMoved

    private void jPanelOpPagoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpPagoMouseExited
        jPanelOpPago.setBackground(new Color(132, 183, 224));
    }//GEN-LAST:event_jPanelOpPagoMouseExited

    private void jPanelMinimizarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMinimizarMouseMoved
        jPanelMinimizar.setBackground(new Color(132, 183, 224));
    }//GEN-LAST:event_jPanelMinimizarMouseMoved

    private void jPanelMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMinimizarMouseExited
        jPanelMinimizar.setBackground(new Color(215, 215, 215));
    }//GEN-LAST:event_jPanelMinimizarMouseExited

    private void jComboBoxTipoDePagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoDePagoItemStateChanged
        CardLayout card;
        switch(jComboBoxTipoDePago.getSelectedIndex()){
            case 0: 
                    //Limpio la busqueda
                    jTextFieldBusqueda_Pago.setText("");
                    jComboBoxBusqueda_Pago.setSelectedIndex(0);
                    jComboBoxSalaPago.setSelectedIndex(0);
                    jComboBoxTurnoPago.setSelectedIndex(0);
                    //Limpio los campos ya cargados
                    jTextField_NomyAp_PagoIns.setEditable(false);
                    jTextField_Sala_PagoIns.setEditable(false);
                    jTextField_Turno_PagoIns.setEditable(false);
                    jTextField_NomyAp_PagoIns.setText("");
                    jTextField_Sala_PagoIns.setText("");
                    jTextField_Turno_PagoIns.setText("");
                    jSpinner_Cuotas_PagoIns.setValue(1);
                    Calendar cal= Calendar.getInstance();
                    jYearChooserCicloLectivo.setValue(cal.get(Calendar.YEAR));
                    jLabelMontoRestante.setText("-");
                    jLabelMontoAPagar.setText("-");
                    jLabelTotalPagado.setText("-");
                    jButtonRegistrarPago.setEnabled(false);
                    modelCuotas.setRowCount(0);
                    //Cargo la tabla
                    String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
                    String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
                    int c = jComboBoxSalaPago.getSelectedIndex();
                    int d = jComboBoxTurnoPago.getSelectedIndex();
                    cargarTabla(a,b,c,d, modelAlumnos, 0);
                    //Muestro la pantalla
                    card = (CardLayout)jPanelTipoPago.getLayout();
                    card.show(jPanelTipoPago, "pagoInscripcion");
                    break;
            case 1: card = (CardLayout)jPanelTipoPago.getLayout();
                    card.show(jPanelTipoPago, "pagoCuota");break;
            
        }
    }//GEN-LAST:event_jComboBoxTipoDePagoItemStateChanged

    private void jPanelOpDatosAlumnosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpDatosAlumnosMouseExited
        jPanelOpDatosAlumnos.setBackground(new Color(112, 163, 204));
    }//GEN-LAST:event_jPanelOpDatosAlumnosMouseExited

    private void jPanelOpDatosAlumnosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpDatosAlumnosMouseMoved
        jPanelOpDatosAlumnos.setBackground(new Color(142, 193, 234));
    }//GEN-LAST:event_jPanelOpDatosAlumnosMouseMoved

    private void jButton_InscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InscribirActionPerformed
        //Variables para controles de la primer columna
        String lugarNacimiento="", domicilio="", otrosDatos="", apellidoYNombre="";
        Date fechaDeNacimiento = new Date();
        long telefono = -1;
        int dni = -1; 
        int año;
        boolean controlMedico, vacunas, controlNatacion, traeMateriales, error = false;
        Set<Alumno> hermanos = new HashSet();
        Set<Tutor> tutores = new HashSet();
        Set<Pago> pagos = new TreeSet();
        Map<Integer, Sala> salas = new HashMap();
        Set<RegistroAsistencia> ra = new HashSet();
        apellidoYNombre = jTextField_ApyNom.getText();
        Sala sala;
        int salaEdad, salaTurno, idSala;
        ManagerAlumno mngAlumno = ManagerAlumno.getManager();
        Alumno alumno = null;
        ManagerTutor mngTutor = ManagerTutor.getManager();
        Tutor padre = null, madre = null, otro = null;
        ManagerSala mngSala = ManagerSala.getManagerSala();
        
        //Controles de la primer columna
        salaEdad = jComboBoxSala_Insc.getSelectedIndex();
        salaTurno = jComboBoxTurno_Insc.getSelectedIndex();
        idSala = (salaEdad * 2)+ salaTurno +1;
        sala = mngSala.getSala(idSala);
        año = jYearChooserCicloLectivoInsc.getYear();
        salas.put(año, sala);
        
        if(apellidoYNombre.isEmpty()){
            error = true;
            JOptionPane.showMessageDialog(null,"El nombre del alumno no puede ser vacio", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
        }
        if(!error){
            fechaDeNacimiento = jDateChooserFechaNacimiento.getDate();
            if(fechaDeNacimiento == null){
                error = true;
                JOptionPane.showMessageDialog(null,"Debe seleccionar una fecha de nacimiento", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            lugarNacimiento = jTextField_LugarNacimiento.getText();
            if(lugarNacimiento.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Lugar de nacimiento no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                dni = new Integer(jTextField_DNI_Ins.getText());
            }
            catch(java.lang.NumberFormatException e){
                error = true;
                JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            domicilio = jTextField_Domicilio.getText();
            if(domicilio.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Domicilio no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                telefono = new Long(jTextField_Telefono.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        otrosDatos = jTextAreaOtrosDatos.getText();
        if(!error){
            if(otrosDatos.length()>100){
                error = true;
                JOptionPane.showMessageDialog(null,"Otros datos es muy largo", "Exceso de texto",JOptionPane.WARNING_MESSAGE);
            }
        }   
        traeMateriales = jCheckBoxTraeMateriales.isSelected();
        vacunas = jCheckBoxVacunas.isSelected();
        controlMedico = jCheckBoxMedico.isSelected();
        controlNatacion = jCheckBoxNatacion.isSelected();
        //Variables para control del resto de columnas
        //Primer paso: Padre
        String ocupacion = "", tipoDniT = "", relacion = "Padre", apellidoYNombreT = "";
        int dniT = 0;
        long telefonoPersonal = 0, telefonoTrabajo = 0;
        Set<Alumno> atutorados = new TreeSet();
        Set<Retiro> retiros = new TreeSet();
        if(!error){
            apellidoYNombreT = jTextField_ApyNom_Padre.getText();
            if(apellidoYNombreT.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Nombre del padre no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                dniT = new Integer (jTextField_NumDoc_Padre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            ocupacion = jTextField_Ocupacion_Padre.getText();
            if(ocupacion.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"ocupacion del padre no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                telefonoPersonal = new Long(jTextField_TelPer_Padre.getText());
                telefonoTrabajo = new Long(jTextField_TelTra_Padre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){//Si no tiene errores creo el padre, luego veré si lo utilizo o no
            try {
                padre = mngTutor.nuevoTutor(ocupacion, telefonoPersonal, telefonoTrabajo, relacion, atutorados, retiros, dniT, apellidoYNombreT);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        //Segundo paso: Madre
        ocupacion = ""; tipoDniT = ""; relacion = "Madre";
        apellidoYNombreT = "";
        dniT = 0;
        telefonoPersonal = 0; telefonoTrabajo = 0;
        if(!error){
            apellidoYNombreT = jTextField_ApyNom_Madre.getText();
            if(apellidoYNombreT.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Nombre de la madre no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                dniT = new Integer (jTextField_NumDoc_Madre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            ocupacion = jTextField_Ocupacion_Madre.getText();
            if(ocupacion.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"ocupacion de la madre no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                telefonoPersonal = new Long(jTextField_TelPer_Madre.getText());
                telefonoTrabajo = new Long(jTextField_TelTra_Madre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try {
                madre = mngTutor.nuevoTutor(ocupacion, telefonoPersonal, telefonoTrabajo, relacion, atutorados, retiros, dniT, apellidoYNombreT);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        //Paso 3 solo si esta selecionado incluir tutor que no sean los padres
        if(!error && jRadioButtonAgregarTutor.isSelected()){
            ocupacion = ""; tipoDniT = ""; relacion = "Tutor";
            apellidoYNombreT = "";
            dniT = 0;
            telefonoPersonal = 0; telefonoTrabajo = 0;

            if(!error){
                apellidoYNombreT = jTextField_ApyNom_Tutor.getText();
                if(apellidoYNombreT.isEmpty()){
                    error = true;
                    JOptionPane.showMessageDialog(null,"Nombre de la madre no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                try{
                    dniT = new Integer (jTextField_NumDoc_Tutor.getText());
                }
                catch(java.lang.NumberFormatException e){
                     error = true;
                    JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                ocupacion = jTextField_Ocupacion_Tutor.getText();
                if(ocupacion.isEmpty()){
                    error = true;
                    JOptionPane.showMessageDialog(null,"ocupacion de la madre no puede ser vacío", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                try{
                    telefonoPersonal = new Long(jTextField_TelPer_Tutor.getText());
                    telefonoTrabajo = new Long(jTextField_TelTra_Tutor.getText());
                }
                catch(java.lang.NumberFormatException e){
                    error = true;
                    JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                try {
                    otro = mngTutor.nuevoTutor(ocupacion, telefonoPersonal, telefonoTrabajo, relacion, atutorados, retiros, dniT, apellidoYNombreT);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        if(!error){
            if(jTextField_ApyNom.isEnabled()){//Si es un nuevo alumno
                boolean hermano = false;
                if(!asignarHermano){//hermano no es necesario aca
                    try{
                        mngTutor.altaTutor(padre);
                        tutores.add(padre);
                    }
                    catch(Exception e){//El tutor ya existe en la bd, pueden ocurrir dos cosas
                        int tieneHermano = JOptionPane.showConfirmDialog(null, "¿El alumno tiene hermanos en el jardin?","Hermano",JOptionPane.YES_NO_OPTION);
                        if (tieneHermano == JOptionPane.YES_OPTION){
                            asignarHermano = true;
                        }
                        else{
                            tutores.add(padre);
                        }
                        hermano = true;
                    }
                }
                if(!asignarHermano && !hermano){
                    try{
                        mngTutor.altaTutor(madre);
                        tutores.add(madre);
                    }
                    catch(Exception e){//El tutor ya existe en la bd, pueden ocurrir dos cosas
                        int tieneHermano = JOptionPane.showConfirmDialog(null, "¿El alumno tiene hermanos en el jardin?","Hermano",JOptionPane.YES_NO_OPTION);
                        if (tieneHermano == JOptionPane.YES_OPTION){
                            asignarHermano = true;
                        }
                        else{
                            tutores.add(madre);
                        }
                        hermano = true;
                    }
                }
                if(!asignarHermano && !hermano){
                    try{
                        mngTutor.altaTutor(otro);
                        tutores.add(otro);
                    }
                    catch(Exception e){//El tutor ya existe en la bd, pueden ocurrir dos cosas
                        int tieneHermano = JOptionPane.showConfirmDialog(null, "¿El alumno tiene hermanos en el jardin?","Hermano",JOptionPane.YES_NO_OPTION);
                        if (tieneHermano == JOptionPane.YES_OPTION){
                            asignarHermano = true;
                        }
                        else{//El hermano ya no asiste al jardin
                            tutores.add(otro);
                        }
                        hermano = true;
                    }
                }
                if(asignarHermano && hermano){//Si indico que tiene un hno arriba, NO debe entrar aca o habra tutores repetidos
                    modelAlumnos = (DefaultTableModel) jTableAlumnosDialog.getModel();
                    ManagerAlumno ma = ManagerAlumno.getManager();
                    String a = jComboBox_TipoDialog.getSelectedItem().toString();
                    String b = jTextField_BusquedaDialog.getText().toUpperCase();
                    int c = jComboBox_SalaDialog.getSelectedIndex();
                    int d = jComboBox_TurnoDialog.getSelectedIndex();
                    cargarTabla(a,b,c,d, modelAlumnos, 0);
                    jDialogBuscar.setVisible(true);
                    jDialogBuscar.setLocationRelativeTo(null);
                }
                if(!hermano){//Si entró a alguna excepcion de arriba, aca no debe entrar
                    if(asignarHermano){//Si entró aca, y estaba asignando hermanos ya tengo tutores seleccionados
                        tutores.clear();//Limpio en caso de que haya entrado uno que no debía
                        tutores.addAll(tutoresSelecionados);
                        hermanos.add(alumnoSeleccionado);
                        asignarHermano = false;
                    }
                    try {
                        alumno = mngAlumno.nuevoAlumno(fechaDeNacimiento, lugarNacimiento, domicilio, telefono, controlMedico, vacunas, controlNatacion, traeMateriales, otrosDatos, hermanos, tutores, pagos, salas, ra, dni, apellidoYNombre);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null,ex.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                    }
                    try{
                        mngAlumno.altaAlumno(alumno);
                        JOptionPane.showMessageDialog(null,"El alumno ha sido Inscripto correctamente", "Inscripto",JOptionPane.INFORMATION_MESSAGE);
                    }
                    catch(Exception e){
                        Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, e);
                        JOptionPane.showMessageDialog(null,e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
                if(hermano && !asignarHermano){//Si el hermano ya estaba cargado pero no es alumno:
                    tutores.add(padre);
                    tutores.add(madre);
                    tutores.add(otro);
                    try {
                        alumno = mngAlumno.nuevoAlumno(fechaDeNacimiento, lugarNacimiento, domicilio, telefono, controlMedico, vacunas, controlNatacion, traeMateriales, otrosDatos, hermanos, tutores, pagos, salas, ra, dni, apellidoYNombre);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null,ex.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                    }
                    try{
                        mngAlumno.altaAlumno(alumno);
                        JOptionPane.showMessageDialog(null,"El alumno ha sido Inscripto correctamente", "Inscripto",JOptionPane.INFORMATION_MESSAGE);
                    }
                    catch(Exception e){
                        Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, e);
                        JOptionPane.showMessageDialog(null,e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            else{//Si no es nuevo alumno
                if(mngAlumno.actualizarAñoLectivo(dni, idSala, año))
                    JOptionPane.showMessageDialog(null,"El alumno ha sido Inscripto correctamente", "Inscripto",JOptionPane.INFORMATION_MESSAGE);
                else
                    JOptionPane.showMessageDialog(null,"El alumno ya se encuentra inscripto este año", "Inscripto",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton_InscribirActionPerformed

    private void jDateChooserFechaNacimientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserFechaNacimientoPropertyChange
        Date fechaDeNacimiento = jDateChooserFechaNacimiento.getDate();
        String edad = Alumno.getEdad(fechaDeNacimiento);
        jTextField_Edad.setText(edad);
    }//GEN-LAST:event_jDateChooserFechaNacimientoPropertyChange

    private void jRadioButtonAgregarTutorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonAgregarTutorStateChanged
        if(jRadioButtonAgregarTutor.isSelected()){
            jLabel28.setEnabled(true);
            jLabel30.setEnabled(true);
            jLabel31.setEnabled(true);
            jLabel32.setEnabled(true);
            jLabel47.setEnabled(true);
            jLabel48.setEnabled(true);
            jTextField_ApyNom_Tutor.setEnabled(true);
            jTextField_NumDoc_Tutor.setEnabled(true);
            jTextField_Ocupacion_Tutor.setEnabled(true);
            jTextField_Relacion.setEnabled(true);
            jTextField_TelPer_Tutor.setEnabled(true);
            jTextField_TelTra_Tutor.setEnabled(true);
        }
        else{
            jLabel28.setEnabled(false);
            jLabel30.setEnabled(false);
            jLabel31.setEnabled(false);
            jLabel32.setEnabled(false);
            jLabel47.setEnabled(false);
            jLabel48.setEnabled(false);
            jTextField_ApyNom_Tutor.setEnabled(false);
            jTextField_NumDoc_Tutor.setEnabled(false);
            jTextField_Ocupacion_Tutor.setEnabled(false);
            jTextField_Relacion.setEnabled(false);
            jTextField_TelPer_Tutor.setEnabled(false);
            jTextField_TelTra_Tutor.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButtonAgregarTutorStateChanged

    private void jRadioButtonAgregarPadreStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonAgregarPadreStateChanged
        if(jRadioButtonAgregarPadre.isSelected()){
            jLabel17.setEnabled(true);
            jLabel19.setEnabled(true);
            jLabel20.setEnabled(true);
            jLabel42.setEnabled(true);
            jLabel44.setEnabled(true);
            jTextField_ApyNom_Padre.setEnabled(true);
            jTextField_NumDoc_Padre.setEnabled(true);
            jTextField_Ocupacion_Padre.setEnabled(true);
            jTextField_TelPer_Padre.setEnabled(true);
            jTextField_TelTra_Padre.setEnabled(true);
        }
        else{
            jLabel17.setEnabled(false);
            jLabel19.setEnabled(false);
            jLabel20.setEnabled(false);
            jLabel42.setEnabled(false);
            jLabel44.setEnabled(false);
            jTextField_ApyNom_Padre.setEnabled(false);
            jTextField_NumDoc_Padre.setEnabled(false);
            jTextField_Ocupacion_Padre.setEnabled(false);
            jTextField_TelPer_Padre.setEnabled(false);
            jTextField_TelTra_Padre.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButtonAgregarPadreStateChanged

    private void jTextFieldBusqueda_PagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusqueda_PagoKeyReleased
        String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
        int c = jComboBoxSalaPago.getSelectedIndex();
        int d = jComboBoxTurnoPago.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jTextFieldBusqueda_PagoKeyReleased

    private void jComboBoxSalaPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSalaPagoItemStateChanged
        String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
        int c = jComboBoxSalaPago.getSelectedIndex();
        int d = jComboBoxTurnoPago.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBoxSalaPagoItemStateChanged

    private void jComboBoxTurnoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTurnoPagoItemStateChanged
        String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
        int c = jComboBoxSalaPago.getSelectedIndex();
        int d = jComboBoxTurnoPago.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBoxTurnoPagoItemStateChanged

    private void jComboBoxBusqueda_PagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBusqueda_PagoItemStateChanged
        String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
        int c = jComboBoxSalaPago.getSelectedIndex();
        int d = jComboBoxTurnoPago.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBoxBusqueda_PagoItemStateChanged

    private void jButtonBuscarAlumBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarAlumBDActionPerformed
        modelAlumnos = (DefaultTableModel) jTableAlumnosDialog.getModel();
        ManagerAlumno ma = ManagerAlumno.getManager();
        String a = jComboBox_TipoDialog.getSelectedItem().toString();
        String b = jTextField_BusquedaDialog.getText().toUpperCase();
        int c = jComboBox_SalaDialog.getSelectedIndex();
        int d = jComboBox_TurnoDialog.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
        jDialogBuscar.setVisible(true);
        jDialogBuscar.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButtonBuscarAlumBDActionPerformed

    private void jTextField_BusquedaDialogKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BusquedaDialogKeyReleased
        String a = jComboBox_TipoDialog.getSelectedItem().toString();
        String b = jTextField_BusquedaDialog.getText().toUpperCase();
        int c = jComboBox_SalaDialog.getSelectedIndex();
        int d = jComboBox_TurnoDialog.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jTextField_BusquedaDialogKeyReleased

    private void jComboBox_TipoDialogItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_TipoDialogItemStateChanged
        String a = jComboBox_TipoDialog.getSelectedItem().toString();
        String b = jTextField_BusquedaDialog.getText().toUpperCase();
        int c = jComboBox_SalaDialog.getSelectedIndex();
        int d = jComboBox_TurnoDialog.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBox_TipoDialogItemStateChanged

    private void jComboBox_SalaDialogItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_SalaDialogItemStateChanged
        String a = jComboBox_TipoDialog.getSelectedItem().toString();
        String b = jTextField_BusquedaDialog.getText().toUpperCase();
        int c = jComboBox_SalaDialog.getSelectedIndex();
        int d = jComboBox_TurnoDialog.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBox_SalaDialogItemStateChanged

    private void jComboBox_TurnoDialogItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_TurnoDialogItemStateChanged
        String a = jComboBox_TipoDialog.getSelectedItem().toString();
        String b = jTextField_BusquedaDialog.getText().toUpperCase();
        int c = jComboBox_SalaDialog.getSelectedIndex();
        int d = jComboBox_TurnoDialog.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBox_TurnoDialogItemStateChanged

    private void jTableAlumnosDialogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlumnosDialogMouseClicked
        if(!asignarHermano){
            borrarTextFieldInscripcion();
            jRadioButtonAgregarPadre.setSelected(false);
            jRadioButtonAgregarMadre.setSelected(false);
            jRadioButtonAgregarTutor.setSelected(false);
            //Bloqueo los datos del alumno
            jTextField_ApyNom.setEnabled(false);
            jDateChooserFechaNacimiento.setEnabled(false);
            jTextField_LugarNacimiento.setEnabled(false);
            jTextField_DNI_Ins.setEnabled(false);
            jTextField_Domicilio.setEnabled(false);
            jTextField_Telefono.setEnabled(false);
            jTextAreaOtrosDatos.setEnabled(false);
            jCheckBoxMedico.setEnabled(false);
            jCheckBoxNatacion.setEnabled(false);
            jCheckBoxTraeMateriales.setEnabled(false);
            jCheckBoxVacunas.setEnabled(false);

            String dniFila = String.valueOf(modelAlumnos.getValueAt(jTableAlumnosDialog.getSelectedRow(),1));
            Set<Tutor> tutors;
            Iterator j;
            Iterator i = listaAlumnos.iterator();
            while(i.hasNext()){
                Alumno a = (Alumno) i.next();
                if(dniFila.equals(String.valueOf(a.getDni()))){
                    jTextField_ApyNom.setText(a.getApellidoYNombre());
                    jDateChooserFechaNacimiento.setDate(a.getFechaDeNacimiento());
                    jTextField_LugarNacimiento.setText(a.getLugarNacimiento());
                    jTextField_DNI_Ins.setText(String.valueOf(a.getDni()));
                    jTextField_Domicilio.setText(a.getDomicilio());
                    jTextField_Telefono.setText(String.valueOf(a.getTelefono()));
                    jTextAreaOtrosDatos.setText(a.getOtrosDatos());
                    jCheckBoxMedico.setSelected(a.isControlMedico());
                    jCheckBoxNatacion.setSelected(a.isControlNatacion());
                    jCheckBoxTraeMateriales.setSelected(a.isTraeMateriales());
                    jCheckBoxVacunas.setSelected(a.isVacunas());
                    tutors = a.getTutores();
                    if(tutors == null)
                        tutors = new HashSet();
                    j = tutors.iterator();
                    while(j.hasNext()){
                        Tutor t = (Tutor) j.next();
                        if(t.getRelacion().equals("Padre")){
                            jTextField_ApyNom_Padre.setText(t.getApellidoYNombre());
                            jTextField_NumDoc_Padre.setText(String.valueOf(t.getDni()));
                            jTextField_Ocupacion_Padre.setText(t.getOcupacion());
                            jTextField_TelPer_Padre.setText(String.valueOf(t.getTelefonoPersonal()));
                            jTextField_TelTra_Padre.setText(String.valueOf(t.getTelefonoTrabajo()));
                            continue;
                        }
                        if(t.getRelacion().equals("Madre")){
                            jTextField_ApyNom_Madre.setText(t.getApellidoYNombre());
                            jTextField_NumDoc_Madre.setText(String.valueOf(t.getDni()));
                            jTextField_Ocupacion_Madre.setText(t.getOcupacion());
                            jTextField_TelPer_Madre.setText(String.valueOf(t.getTelefonoPersonal()));
                            jTextField_TelTra_Madre.setText(String.valueOf(t.getTelefonoTrabajo()));
                            continue;
                        }
                        else{
                            jTextField_ApyNom_Tutor.setText(t.getApellidoYNombre());
                            jTextField_NumDoc_Tutor.setText(String.valueOf(t.getDni()));
                            jTextField_Relacion.setText(t.getRelacion());
                            jTextField_Ocupacion_Tutor.setText(t.getOcupacion());
                            jTextField_TelPer_Tutor.setText(String.valueOf(t.getTelefonoPersonal()));
                            jTextField_TelTra_Tutor.setText(String.valueOf(t.getTelefonoTrabajo()));
                            continue;
                        }
                    }
                    break;
                }
            }
            jDialogBuscar.setVisible(false);
            jRadioButtonAgregarMadre.setEnabled(false);
            jRadioButtonAgregarPadre.setEnabled(false);
        }
        else{
            borrarTextFieldInscripcion();
            jRadioButtonAgregarPadre.setSelected(false);
            jRadioButtonAgregarMadre.setSelected(false);
            jRadioButtonAgregarTutor.setSelected(false);
            //Bloqueo los datos del alumno
            String dniFila = String.valueOf(modelAlumnos.getValueAt(jTableAlumnosDialog.getSelectedRow(),1));
            Set<Tutor> tutors;
            Iterator j;
            Iterator i = listaAlumnos.iterator();
            while(i.hasNext()){
                Alumno a = (Alumno) i.next();
                if(dniFila.equals(String.valueOf(a.getDni()))){
                    alumnoSeleccionado = a;
                    tutors = a.getTutores();
                    if(tutors == null)
                        tutors = new HashSet();
                    tutoresSelecionados = tutors;
                    j = tutors.iterator();
                    while(j.hasNext()){
                        Tutor t = (Tutor) j.next();
                        if(t.getRelacion().equals("Padre")){
                            jTextField_ApyNom_Padre.setText(t.getApellidoYNombre());
                            jTextField_NumDoc_Padre.setText(String.valueOf(t.getDni()));
                            jTextField_Ocupacion_Padre.setText(t.getOcupacion());
                            jTextField_TelPer_Padre.setText(String.valueOf(t.getTelefonoPersonal()));
                            jTextField_TelTra_Padre.setText(String.valueOf(t.getTelefonoTrabajo()));
                            continue;
                        }
                        if(t.getRelacion().equals("Madre")){
                            jTextField_ApyNom_Madre.setText(t.getApellidoYNombre());
                            jTextField_NumDoc_Madre.setText(String.valueOf(t.getDni()));
                            jTextField_Ocupacion_Madre.setText(t.getOcupacion());
                            jTextField_TelPer_Madre.setText(String.valueOf(t.getTelefonoPersonal()));
                            jTextField_TelTra_Madre.setText(String.valueOf(t.getTelefonoTrabajo()));
                            continue;
                        }
                        else{
                            jTextField_ApyNom_Tutor.setText(t.getApellidoYNombre());
                            jTextField_NumDoc_Tutor.setText(String.valueOf(t.getDni()));
                            jTextField_Relacion.setText(t.getRelacion());
                            jTextField_Ocupacion_Tutor.setText(t.getOcupacion());
                            jTextField_TelPer_Tutor.setText(String.valueOf(t.getTelefonoPersonal()));
                            jTextField_TelTra_Tutor.setText(String.valueOf(t.getTelefonoTrabajo()));
                            continue;
                        }
                    }
                    break;
                }
            }
            jDialogBuscar.setVisible(false);
            jRadioButtonAgregarMadre.setEnabled(false);
            jRadioButtonAgregarPadre.setEnabled(false);
        }
    }//GEN-LAST:event_jTableAlumnosDialogMouseClicked

    private void jRadioButtonAgregarMadreStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonAgregarMadreStateChanged
        if(jRadioButtonAgregarMadre.isSelected()){
            jLabel16.setEnabled(true);
            jLabel24.setEnabled(true);
            jLabel25.setEnabled(true);
            jLabel45.setEnabled(true);
            jLabel46.setEnabled(true);
            jTextField_ApyNom_Madre.setEnabled(true);
            jTextField_NumDoc_Madre.setEnabled(true);
            jTextField_Ocupacion_Madre.setEnabled(true);
            jTextField_TelPer_Madre.setEnabled(true);
            jTextField_TelTra_Madre.setEnabled(true);
        }
        else{
            jLabel16.setEnabled(false);
            jLabel24.setEnabled(false);
            jLabel25.setEnabled(false);
            jLabel45.setEnabled(false);
            jLabel46.setEnabled(false);
            jTextField_ApyNom_Madre.setEnabled(false);
            jTextField_NumDoc_Madre.setEnabled(false);
            jTextField_Ocupacion_Madre.setEnabled(false);
            jTextField_TelPer_Madre.setEnabled(false);
            jTextField_TelTra_Madre.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButtonAgregarMadreStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        borrarTextFieldInscripcion();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonRegistrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarPagoActionPerformed
        //Creo la fecha para agregarla al pago
        java.util.Date fechaActualFormatoDate = new Date();
        Calendar r = new GregorianCalendar();
        String fecha = "", parcial;
        r.setTime(fechaActualFormatoDate);
        parcial = String.valueOf(r.get(Calendar.YEAR));
        fecha = fecha.concat(parcial+"-");
        parcial = String.valueOf(r.get(Calendar.MONTH)+1);
        fecha = fecha.concat(parcial+"-");
        parcial = String.valueOf(r.get(Calendar.DATE));
        fecha = fecha.concat(parcial);
        List<Date> fechas = new ArrayList<>();
        fechas.add(fechaActualFormatoDate);
        //Guardo el alumno a quien corresponde el pago.
        Set<Alumno> alumnos = new HashSet<>();
        alumnos.add(alumnoSeleccionado);
        float montoTotal,montoPagado,nuevoMontoPagado;
        int cuotas,nroCuota;
        //Si no existia un pago de inscripcion del ano lectivo seleccionado
        if(nuevo){
            //Creo el nuevo pago
            montoTotal = Float.parseFloat(jLabelMontoRestante.getText().substring(2,jLabelMontoRestante.getText().length()-1));
            montoPagado = Float.parseFloat(jLabelMontoAPagar.getText().substring(2,jLabelMontoAPagar.getText().length()-2));
            nuevoMontoPagado = montoPagado;
            cuotas = (int) jSpinner_Cuotas_PagoIns.getValue();
            if(cuotas == 0)
                cuotas++;
            nroCuota = 1;
            pagoSeleccionado = new Pago(fechas,"INSCRIPCION",String.valueOf(jYearChooserCicloLectivo.getValue()),cuotas,montoPagado,montoTotal,1,alumnos);
            //Se lo asigno al alumno seleccionado
            alumnoSeleccionado.getPagos().add(pagoSeleccionado);
            //Lo doy de alta en la BD
            ManagerPago.getManager().altaPago(pagoSeleccionado);
            //Actualizo los campos de la pantalla para que reflejen el pago de la inscripcion
            nuevo = false;
        }
        //Si ya existia un pago de inscripcion del ano lectivo seleccionado
        else{
            //Actualizo el pago
            montoTotal = pagoSeleccionado.getMontoTotal();
            montoPagado = pagoSeleccionado.getMontoPagado();
            cuotas = pagoSeleccionado.getCuotas();
            nroCuota = (int) (montoPagado/(montoTotal/cuotas))+1;
            nuevoMontoPagado =  montoTotal/cuotas + montoPagado;
            pagoSeleccionado.setMontoPagado(nuevoMontoPagado);
            pagoSeleccionado.getFecha().add(fechaActualFormatoDate);
            ManagerPago.getManager().modificarPago(pagoSeleccionado); 
        }
        //Actualizo los campos de la pantalla para que reflejen el pago de la inscripcion
        jSpinner_Cuotas_PagoIns.setEnabled(false);
        modelCuotas.addRow(new Object[]{nroCuota,fecha.toString(),jLabelMontoAPagar.getText()});
        jLabelTotalPagado.setText("$ "+String.valueOf(nuevoMontoPagado)+"0");
        jLabelMontoRestante.setText("$ "+String.valueOf(montoTotal-nuevoMontoPagado)+"0");
        //Si la inscripcion se pago totalmente, lo informo por pantalla
        if(pagoSeleccionado.getMontoPagado() == pagoSeleccionado.getMontoTotal())
        {
            jButtonRegistrarPago.setEnabled(false);
            jLabelMontoRestante.setText("$ 0.00");
            jLabelMontoAPagar.setText("-");
            JOptionPane.showMessageDialog(null,"Se ha completado el pago de la inscripcion.", "Exito",JOptionPane.INFORMATION_MESSAGE);
        }
        //Muestro el exito del pago
        else
            JOptionPane.showMessageDialog(null,"Cuota de inscripcion pagada correctamente.", "Exito",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jButtonRegistrarPagoActionPerformed

    private void jSpinner_Cuotas_PagoInsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_Cuotas_PagoInsStateChanged
        if(!jTextField_NomyAp_PagoIns.getText().isEmpty()){
            int valorSpinner = (Integer) jSpinner_Cuotas_PagoIns.getValue();
            switch(valorSpinner){
                case 1:
                    jLabelMontoAPagar.setText("$ "+String.valueOf(ManagerPago.getManager().obtenerValorInscripcion())+"0");
                    break;
                case 2:
                    jLabelMontoAPagar.setText("$ "+String.valueOf(ManagerPago.getManager().obtenerValorInscripcion()/2)+"0");
                    break;
                case 3:
                    jLabelMontoAPagar.setText("$ "+String.valueOf(ManagerPago.getManager().obtenerValorInscripcion()/3)+"0");
                    break;
                case 4:
                    jLabelMontoAPagar.setText("$ "+String.valueOf(ManagerPago.getManager().obtenerValorInscripcion()/4)+"0");
                    break;
                default:
                    jLabelMontoAPagar.setText("-");

            }
        }
    }//GEN-LAST:event_jSpinner_Cuotas_PagoInsStateChanged

    private void jTablePagoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePagoMousePressed
        modelCuotas.setRowCount(0);
        jSpinner_Cuotas_PagoIns.setEnabled(true);
        jButtonRegistrarPago.setEnabled(true);
        int valorPeriodo = jYearChooserCicloLectivo.getValue();
        float valorInscripcion = ManagerPago.getManager().obtenerValorInscripcion();
        boolean encontroInscripcion = false;
        //Seteo los campos con los datos del alumno seleccionado
        String apellidoFila = String.valueOf(modelAlumnos.getValueAt(jTablePago.getSelectedRow(),0));
        String dniFila = String.valueOf(modelAlumnos.getValueAt(jTablePago.getSelectedRow(),1));
        String salaFila = String.valueOf(modelAlumnos.getValueAt(jTablePago.getSelectedRow(),2));
        String turnoFila = String.valueOf(modelAlumnos.getValueAt(jTablePago.getSelectedRow(),3));
        jTextField_NomyAp_PagoIns.setText(apellidoFila);
        jTextField_Sala_PagoIns.setText(salaFila+" años");
        jTextField_Turno_PagoIns.setText(turnoFila);
        //Busco el alumno  seleccionado en la lista de alumnos
        Iterator i = listaAlumnos.iterator();
        Set<Pago> pagos = null;  
        while(i.hasNext()){
            Alumno a = (Alumno) i.next();
            if(dniFila.equals(String.valueOf(a.getDni()))){
                pagos = a.getPagos();
                alumnoSeleccionado = a;
                break;
            }
        }
        //Busco los  pagos existentes del alumno seleccionado
        i = pagos.iterator();//Nunca va a ser null
        while(i.hasNext()){
            Pago pago = (Pago) i.next();
            if(Integer.parseInt(pago.getPeriodo()) == valorPeriodo && pago.getTipoPago().equals("INSCRIPCION")){
                pagoSeleccionado = pago;
                encontroInscripcion = true;
                nuevo = false;
                break;
            }
        }
        //Si hay un pago correspondiente al alumno seleccionado en el año indicado en el YearChooser
        if(encontroInscripcion){
            //Seteo los valores del pago
            jLabelMontoRestante.setText("$ "+pagoSeleccionado.getMontoTotal()+"0");
            jLabelTotalPagado.setText("$ "+pagoSeleccionado.getMontoPagado()+"0");
            jSpinner_Cuotas_PagoIns.setValue(pagoSeleccionado.getCuotas());
            jSpinner_Cuotas_PagoIns.setEnabled(false);
            //Muestro la tabla con los pagos existentes
            List<Date> fechas = pagoSeleccionado.getFecha();
            Collections.sort(fechas);
            int cuota = 1;
            Calendar r = new GregorianCalendar();
            i = fechas.listIterator();
            while(i.hasNext()){
                Date d = (Date) i.next();
                String fecha = "", parcial;
                r.setTime(d);
                parcial = String.valueOf(r.get(Calendar.YEAR));
                fecha = fecha.concat(parcial+"-");
                parcial = String.valueOf(r.get(Calendar.MONTH)+1);
                fecha = fecha.concat(parcial+"-");
                parcial = String.valueOf(r.get(Calendar.DATE));
                fecha = fecha.concat(parcial);
                modelCuotas.addRow(new Object[]{cuota,fecha,"$ "+pagoSeleccionado.getMontoTotal()/pagoSeleccionado.getCuotas()+"0"});
                cuota++;
            }
            //En caso que ya se haya pagado toda la inscripcion se informa por pantalla
            if(pagoSeleccionado.getMontoPagado() == pagoSeleccionado.getMontoTotal()){
                jButtonRegistrarPago.setEnabled(false);
                jLabelMontoRestante.setText("$ 0.00");
                jLabelMontoAPagar.setText("-");
                JOptionPane.showMessageDialog(null,"La inscripcion de "+valorPeriodo+" de este alumno ya esta pagada completamente.", "Info",JOptionPane.INFORMATION_MESSAGE);
            }
            //En caso de que aun resten pagar cuotas muestro lo  que se debe pagar
            else
                jLabelMontoAPagar.setText("$ "+(pagoSeleccionado.getMontoTotal()/pagoSeleccionado.getCuotas())+"0");
        }
        //Si no hay pago de inscripcion del alumno seleccionado en el año que indica el YearChooser
        else{
            if(alumnoSeleccionado.estaInscripto(valorPeriodo)){
                nuevo = true;
                if(alumnoSeleccionado.tieneHermanos(valorPeriodo))
                    valorInscripcion = (float)((int)valorInscripcion*0.7);
                jLabelMontoRestante.setText("$ "+String.valueOf(valorInscripcion)+"0");
                int valorSpinner = (Integer) jSpinner_Cuotas_PagoIns.getValue();
                //La primera vez que ingresa, el valor del Spinner es 0
                if(valorSpinner == 0)
                    valorSpinner++;
                switch(valorSpinner){
                    case 1:
                        jLabelMontoAPagar.setText("$ "+valorInscripcion+"0");
                        break;
                    case 2:
                        jLabelMontoAPagar.setText("$ "+(valorInscripcion/2)+"0");
                        break;
                    case 3:
                        jLabelMontoAPagar.setText("$ "+(valorInscripcion/3)+"0");
                        break;
                    case 4:
                        jLabelMontoAPagar.setText("$ "+(valorInscripcion/4)+"0");
                        break;
                }
            }
            else{
                jButtonRegistrarPago.setEnabled(false);
                jLabelMontoRestante.setText("-");
                jLabelMontoAPagar.setText("-");
                jTextField_NomyAp_PagoIns.setText("");
                jTextField_Sala_PagoIns.setText("");
                jTextField_Turno_PagoIns.setText("");
                JOptionPane.showMessageDialog(null,"El alumno seleccionado no está inscripto en el ciclo lectivo "+valorPeriodo+".", "Info",JOptionPane.WARNING_MESSAGE);
            }
        }   
    }//GEN-LAST:event_jTablePagoMousePressed

    private void jTableDatosAlumnosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDatosAlumnosMousePressed
        String dniFila = String.valueOf(modelAlumnos.getValueAt(jTableDatosAlumnos.getSelectedRow(),1));
        Set<Tutor> tutors;
        Map<Integer, Sala> salas;
        Sala sala;
        int salaId;
        Calendar cal= Calendar.getInstance();
        ManagerAlumno ma = ManagerAlumno.getManager();
        listaAlumnos = ma.obtenerTodosAlumno();
        Iterator j;
        Iterator i = listaAlumnos.iterator();
        while(i.hasNext()){
            Alumno a = (Alumno) i.next();
            if(dniFila.equals(String.valueOf(a.getDni()))){
                jLabel_NombreYApellido.setText(a.getApellidoYNombre());
                jLabel_FechaNacimiento.setText(String.valueOf(a.getFechaDeNacimiento()));
                jLabel_LugarNacimiento.setText(a.getLugarNacimiento());
                jLabel_Dni.setText(String.valueOf(a.getDni()));
                jLabel_Edad.setText(a.getEdad(a.getFechaDeNacimiento()));
                jLabel_Domicilio.setText(a.getDomicilio());
                jLabel_TelefonoEmergencia.setText(String.valueOf(a.getTelefono()));
                jLabel_OtrosDatos.setText(a.getOtrosDatos());
                if(a.isControlMedico())
                    jLabel_ControlMedico.setText("Sí");
                else
                    jLabel_ControlMedico.setText("No");
                if(a.isControlMedico())
                    jLabel_ControlNatacion.setText("Sí");
                else
                    jLabel_ControlNatacion.setText("No");
                if(a.isControlMedico())
                    jLabel_Vacunas.setText("Sí");
                else
                    jLabel_Vacunas.setText("No");
                if(a.isControlMedico())
                    jLabel_TraeMateriales.setText("Sí");
                else
                    jLabel_TraeMateriales.setText("No");
                
                salas = a.getSalas();
                sala = salas.get(cal.get(Calendar.YEAR));
                if(sala == null){
                    jLabel_Sala.setText("No inscripto en este ciclo lectivo");
                }
                else{
                    salaId = sala.getIdSala();
                    switch(salaId){
                        case 1: jLabel_Sala.setText("3 Turno Mañana");break;
                        case 2: jLabel_Sala.setText("3 Turno Tarde");break;
                        case 3: jLabel_Sala.setText("4 Turno Mañana");break;
                        case 4: jLabel_Sala.setText("4 Turno Tarde");break;
                        case 5: jLabel_Sala.setText("5 Turno Mañana");break;
                        case 6: jLabel_Sala.setText("5 Turno Tarde");break;
                    }
                }
                tutors = a.getTutores();
                if(tutors == null)
                    tutors = new HashSet();
                j = tutors.iterator();
                while(j.hasNext()){
                    Tutor t = (Tutor) j.next();
                    if(t.getRelacion().equals("Padre")){
                        jLabel_Padre.setText(t.getApellidoYNombre());
                        jLabel_TelefonoPersonalPadre.setText(String.valueOf(t.getTelefonoPersonal()));
                        jLabel_TelefonoTrabajoPadre.setText(String.valueOf(t.getTelefonoTrabajo()));
                        continue;
                    }
                    if(t.getRelacion().equals("Madre")){
                        jLabel_Madre.setText(t.getApellidoYNombre());
                        jLabel_TelefonoPersonalMadre.setText(String.valueOf(t.getTelefonoPersonal()));
                        jLabel_TelefonoTrabajoMadre.setText(String.valueOf(t.getTelefonoTrabajo()));
                        continue;
                    }
                    else{
                        jLabel_Tutor.setText(t.getApellidoYNombre());
                        jLabel_TelefonoPersonalTutor.setText(String.valueOf(t.getTelefonoPersonal()));
                        jLabel_TelefonoTrabajoTutor.setText(String.valueOf(t.getTelefonoTrabajo()));
                        continue;
                    }
                }
                
                break;
            }
        }
    }//GEN-LAST:event_jTableDatosAlumnosMousePressed

    private void jYearChooserCicloLectivoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jYearChooserCicloLectivoPropertyChange
        //Si esta vacio significa que es la primera vez que entra
        if(!jTextField_NomyAp_PagoIns.getText().isEmpty()){
            //Limpio los campos ya cargados
            jTextField_NomyAp_PagoIns.setEditable(false);
            jTextField_Sala_PagoIns.setEditable(false);
            jTextField_Turno_PagoIns.setEditable(false);
            jTextField_NomyAp_PagoIns.setText("");
            jTextField_Sala_PagoIns.setText("");
            jTextField_Turno_PagoIns.setText("");
            jSpinner_Cuotas_PagoIns.setValue(1);
            Calendar cal= Calendar.getInstance();
            jLabelMontoRestante.setText("-");
            jLabelMontoAPagar.setText("-");
            jLabelTotalPagado.setText("-");
            jButtonRegistrarPago.setEnabled(false);
            modelCuotas.setRowCount(0);
            jTablePago.clearSelection();
            
        }
    }//GEN-LAST:event_jYearChooserCicloLectivoPropertyChange

    private void jTextFieldBusqueda_DatosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusqueda_DatosKeyReleased
        String a = jComboBoxBusqueda_Datos.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Datos.getText().toUpperCase();
        int c = jComboBoxSalaDatos.getSelectedIndex();
        int d = jComboBoxTurnoDatos.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jTextFieldBusqueda_DatosKeyReleased

    private void jComboBoxBusqueda_DatosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBusqueda_DatosItemStateChanged
        String a = jComboBoxBusqueda_Datos.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Datos.getText().toUpperCase();
        int c = jComboBoxSalaDatos.getSelectedIndex();
        int d = jComboBoxTurnoDatos.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBoxBusqueda_DatosItemStateChanged

    private void jComboBoxSalaDatosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSalaDatosItemStateChanged
        String a = jComboBoxBusqueda_Datos.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Datos.getText().toUpperCase();
        int c = jComboBoxSalaDatos.getSelectedIndex();
        int d = jComboBoxTurnoDatos.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBoxSalaDatosItemStateChanged

    private void jComboBoxTurnoDatosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTurnoDatosItemStateChanged
        String a = jComboBoxBusqueda_Datos.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Datos.getText().toUpperCase();
        int c = jComboBoxSalaDatos.getSelectedIndex();
        int d = jComboBoxTurnoDatos.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
    }//GEN-LAST:event_jComboBoxTurnoDatosItemStateChanged

    private void jPanelOpControlPagosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpControlPagosMouseExited
        jPanelOpControlPagos.setBackground(new Color(132, 183, 224));
    }//GEN-LAST:event_jPanelOpControlPagosMouseExited

    private void jPanelOpControlPagosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpControlPagosMouseMoved
        jPanelOpControlPagos.setBackground(new Color(162, 213, 254));
    }//GEN-LAST:event_jPanelOpControlPagosMouseMoved

    private void jTextFieldBusqueda_ControlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusqueda_ControlKeyReleased
        String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Control.getText().toUpperCase();
        int c = jComboBoxSalaControl.getSelectedIndex();
        int d = jComboBoxTurnoControl.getSelectedIndex();
        if(jComboBoxTipoControl.getSelectedIndex() == 0)
            cargarTabla(a,b,c,d, modelOtros, 1);
        else
            cargarTabla(a,b,c,d, modelCuotas, 2);
    }//GEN-LAST:event_jTextFieldBusqueda_ControlKeyReleased

    private void jComboBoxBusqueda_ControlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBusqueda_ControlItemStateChanged
        String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Control.getText().toUpperCase();
        int c = jComboBoxSalaControl.getSelectedIndex();
        int d = jComboBoxTurnoControl.getSelectedIndex();
        if(jComboBoxTipoControl.getSelectedIndex() == 0)
            cargarTabla(a,b,c,d, modelOtros, 1);
        else
            cargarTabla(a,b,c,d, modelCuotas, 2);
    }//GEN-LAST:event_jComboBoxBusqueda_ControlItemStateChanged

    private void jComboBoxSalaControlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSalaControlItemStateChanged
        String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Control.getText().toUpperCase();
        int c = jComboBoxSalaControl.getSelectedIndex();
        int d = jComboBoxTurnoControl.getSelectedIndex();
        if(jComboBoxTipoControl.getSelectedIndex() == 0)
            cargarTabla(a,b,c,d, modelOtros, 1);
        else
            cargarTabla(a,b,c,d, modelCuotas, 2);
    }//GEN-LAST:event_jComboBoxSalaControlItemStateChanged

    private void jComboBoxTurnoControlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTurnoControlItemStateChanged
        String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Control.getText().toUpperCase();
        int c = jComboBoxSalaControl.getSelectedIndex();
        int d = jComboBoxTurnoControl.getSelectedIndex();
        if(jComboBoxTipoControl.getSelectedIndex() == 0)
            cargarTabla(a,b,c,d, modelOtros, 1);
        else
            cargarTabla(a,b,c,d, modelCuotas, 2);
    }//GEN-LAST:event_jComboBoxTurnoControlItemStateChanged

    private void jComboBoxTipoControlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoControlItemStateChanged
        String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Control.getText().toUpperCase();
        int c = jComboBoxSalaControl.getSelectedIndex();
        int d = jComboBoxTurnoControl.getSelectedIndex();
        CardLayout card = (CardLayout)jPanelCardControl.getLayout();
        if(jComboBoxTipoControl.getSelectedIndex() == 0){
            cargarTabla(a,b,c,d, modelOtros, 1);
            card.show(jPanelCardControl, "controlOtros");
        }
        else{
            cargarTabla(a,b,c,d, modelCuotas, 2);
            card.show(jPanelCardControl, "controlCuotas");
        }
    }//GEN-LAST:event_jComboBoxTipoControlItemStateChanged

    private void jYearChooserControlPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jYearChooserControlPropertyChange
        if(primera){
            primera = false;
        }
        else{
            String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
            String b = jTextFieldBusqueda_Control.getText().toUpperCase();
            int c = jComboBoxSalaControl.getSelectedIndex();
            int d = jComboBoxTurnoControl.getSelectedIndex();
            if(jComboBoxTipoControl.getSelectedIndex() == 0)
                cargarTabla(a,b,c,d, modelOtros, 1);
            else
                cargarTabla(a,b,c,d, modelCuotas, 2);
        }
    }//GEN-LAST:event_jYearChooserControlPropertyChange

    private void jPanelOpInscripcionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpInscripcionMousePressed
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "inscripcion");
        borrarTextFieldInscripcion();
    }//GEN-LAST:event_jPanelOpInscripcionMousePressed

    private void jPanelOpPagoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpPagoMousePressed
        //Limpio la busqueda
        jTextFieldBusqueda_Pago.setText("");
        jComboBoxBusqueda_Pago.setSelectedIndex(0);
        jComboBoxSalaPago.setSelectedIndex(0);
        jComboBoxTurnoPago.setSelectedIndex(0);
        //Limpio los campos cargados
        jTextField_NomyAp_PagoIns.setEditable(false);
        jTextField_Sala_PagoIns.setEditable(false);
        jTextField_Turno_PagoIns.setEditable(false);
        jComboBoxTipoDePago.setSelectedIndex(0);
        jTextField_NomyAp_PagoIns.setText("");
        jTextField_Sala_PagoIns.setText("");
        jTextField_Turno_PagoIns.setText("");
        jSpinner_Cuotas_PagoIns.setValue(1);
        Calendar cal= Calendar.getInstance();
        jYearChooserCicloLectivo.setValue(cal.get(Calendar.YEAR));
        jLabelMontoRestante.setText("-");
        jLabelMontoAPagar.setText("-");
        jLabelTotalPagado.setText("-");
        jButtonRegistrarPago.setEnabled(false);
        modelCuotas.setRowCount(0);
        //Cargo la tabla
        String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
        int c = jComboBoxSalaPago.getSelectedIndex();
        int d = jComboBoxTurnoPago.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
        //Muestro la pantalla
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "pago");
       
    }//GEN-LAST:event_jPanelOpPagoMousePressed

    private void jPanelOpDatosAlumnosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpDatosAlumnosMousePressed
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "datosAlumnos");
        borrarLabelsDatosAlumno();
        modelAlumnos = (DefaultTableModel) jTableDatosAlumnos.getModel();
        ManagerAlumno ma = ManagerAlumno.getManager();
        String a = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Pago.getText().toUpperCase();
        int c = jComboBoxSalaPago.getSelectedIndex();
        int d = jComboBoxTurnoPago.getSelectedIndex();
        cargarTabla(a,b,c,d, modelAlumnos, 0);
        
    }//GEN-LAST:event_jPanelOpDatosAlumnosMousePressed

    private void jPanelOpControlPagosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpControlPagosMousePressed
        String a = jComboBoxBusqueda_Control.getSelectedItem().toString();
        String b = jTextFieldBusqueda_Control.getText().toUpperCase();
        int c = jComboBoxSalaControl.getSelectedIndex();
        int d = jComboBoxTurnoControl.getSelectedIndex();
        cargarTabla(a,b,c,d, modelOtros, 1);
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "controlPagos");
    }//GEN-LAST:event_jPanelOpControlPagosMousePressed

    private void jPanelCerrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCerrarMousePressed
        System.exit(0);
    }//GEN-LAST:event_jPanelCerrarMousePressed

    private void jPanelMinimizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMinimizarMousePressed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jPanelMinimizarMousePressed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBuscarAlumBD;
    private javax.swing.JButton jButtonRegistrarPago;
    private javax.swing.JButton jButton_Inscribir;
    private javax.swing.JCheckBox jCheckBoxMedico;
    private javax.swing.JCheckBox jCheckBoxNatacion;
    private javax.swing.JCheckBox jCheckBoxTraeMateriales;
    private javax.swing.JCheckBox jCheckBoxVacunas;
    private javax.swing.JComboBox<String> jComboBoxBusqueda_Control;
    private javax.swing.JComboBox<String> jComboBoxBusqueda_Datos;
    private javax.swing.JComboBox<String> jComboBoxBusqueda_Pago;
    private javax.swing.JComboBox<String> jComboBoxSalaControl;
    private javax.swing.JComboBox<String> jComboBoxSalaDatos;
    private javax.swing.JComboBox<String> jComboBoxSalaPago;
    private javax.swing.JComboBox<String> jComboBoxSala_Insc;
    private javax.swing.JComboBox<String> jComboBoxTipoControl;
    private javax.swing.JComboBox<String> jComboBoxTipoDePago;
    private javax.swing.JComboBox<String> jComboBoxTurnoControl;
    private javax.swing.JComboBox<String> jComboBoxTurnoDatos;
    private javax.swing.JComboBox<String> jComboBoxTurnoPago;
    private javax.swing.JComboBox<String> jComboBoxTurno_Insc;
    private javax.swing.JComboBox<String> jComboBox_SalaDialog;
    private javax.swing.JComboBox<String> jComboBox_TipoDialog;
    private javax.swing.JComboBox<String> jComboBox_TurnoDialog;
    private com.toedter.calendar.JDateChooser jDateChooserFechaNacimiento;
    private javax.swing.JDialog jDialogBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMontoAPagar;
    private javax.swing.JLabel jLabelMontoRestante;
    private javax.swing.JLabel jLabelTotalPagado;
    private javax.swing.JLabel jLabel_ControlMedico;
    private javax.swing.JLabel jLabel_ControlNatacion;
    private javax.swing.JLabel jLabel_Dni;
    private javax.swing.JLabel jLabel_Domicilio;
    private javax.swing.JLabel jLabel_Edad;
    private javax.swing.JLabel jLabel_FechaNacimiento;
    private javax.swing.JLabel jLabel_LugarNacimiento;
    private javax.swing.JLabel jLabel_Madre;
    private javax.swing.JLabel jLabel_NombreYApellido;
    private javax.swing.JLabel jLabel_OtrosDatos;
    private javax.swing.JLabel jLabel_Padre;
    private javax.swing.JLabel jLabel_Sala;
    private javax.swing.JLabel jLabel_TelefonoEmergencia;
    private javax.swing.JLabel jLabel_TelefonoPersonalMadre;
    private javax.swing.JLabel jLabel_TelefonoPersonalPadre;
    private javax.swing.JLabel jLabel_TelefonoPersonalTutor;
    private javax.swing.JLabel jLabel_TelefonoTrabajoMadre;
    private javax.swing.JLabel jLabel_TelefonoTrabajoPadre;
    private javax.swing.JLabel jLabel_TelefonoTrabajoTutor;
    private javax.swing.JLabel jLabel_TraeMateriales;
    private javax.swing.JLabel jLabel_Tutor;
    private javax.swing.JLabel jLabel_Vacunas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelBarraSup;
    private javax.swing.JPanel jPanelCard;
    private javax.swing.JPanel jPanelCardControl;
    private javax.swing.JPanel jPanelCerrar;
    private javax.swing.JPanel jPanelControlPagos;
    private javax.swing.JPanel jPanelCuota;
    private javax.swing.JPanel jPanelDatosAlumnos;
    private javax.swing.JPanel jPanelDetalles;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JPanel jPanelFondoControlPagos;
    private javax.swing.JPanel jPanelFondoDatosAlumnos;
    private javax.swing.JPanel jPanelFondoDialog;
    private javax.swing.JPanel jPanelInscripcion;
    private javax.swing.JPanel jPanelInterseccion;
    private javax.swing.JPanel jPanelMinimizar;
    private javax.swing.JPanel jPanelOpControlPagos;
    private javax.swing.JPanel jPanelOpDatosAlumnos;
    private javax.swing.JPanel jPanelOpInscripcion;
    private javax.swing.JPanel jPanelOpPago;
    private javax.swing.JPanel jPanelPago;
    private javax.swing.JPanel jPanelPagpInsc;
    private javax.swing.JPanel jPanelPestanas;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JPanel jPanelTipoPago;
    private javax.swing.JPanel jPanelTitulo;
    private javax.swing.JProgressBar jProgressBarSala3;
    private javax.swing.JProgressBar jProgressBarSala4;
    private javax.swing.JProgressBar jProgressBarSala5;
    private javax.swing.JProgressBar jProgressBarSalaTotal;
    private javax.swing.JRadioButton jRadioButtonAgregarMadre;
    private javax.swing.JRadioButton jRadioButtonAgregarPadre;
    private javax.swing.JRadioButton jRadioButtonAgregarTutor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSpinner jSpinner_Cuotas_PagoIns;
    private javax.swing.JTable jTableAlumnosDialog;
    private javax.swing.JTable jTableControlOtros;
    private javax.swing.JTable jTableControlPagos;
    private javax.swing.JTable jTableCuotas;
    private javax.swing.JTable jTableDatosAlumnos;
    private javax.swing.JTable jTablePago;
    private javax.swing.JTextArea jTextAreaOtrosDatos;
    private javax.swing.JTextField jTextFieldBusqueda_Control;
    private javax.swing.JTextField jTextFieldBusqueda_Datos;
    private javax.swing.JTextField jTextFieldBusqueda_Pago;
    private javax.swing.JTextField jTextField_ApyNom;
    private javax.swing.JTextField jTextField_ApyNom_Madre;
    private javax.swing.JTextField jTextField_ApyNom_Padre;
    private javax.swing.JTextField jTextField_ApyNom_Tutor;
    private javax.swing.JTextField jTextField_BusquedaDialog;
    private javax.swing.JTextField jTextField_DNI_Ins;
    private javax.swing.JTextField jTextField_Domicilio;
    private javax.swing.JTextField jTextField_Edad;
    private javax.swing.JTextField jTextField_LugarNacimiento;
    private javax.swing.JTextField jTextField_NomyAp_PagoIns;
    private javax.swing.JTextField jTextField_NumDoc_Madre;
    private javax.swing.JTextField jTextField_NumDoc_Padre;
    private javax.swing.JTextField jTextField_NumDoc_Tutor;
    private javax.swing.JTextField jTextField_Ocupacion_Madre;
    private javax.swing.JTextField jTextField_Ocupacion_Padre;
    private javax.swing.JTextField jTextField_Ocupacion_Tutor;
    private javax.swing.JTextField jTextField_Relacion;
    private javax.swing.JTextField jTextField_Sala_PagoIns;
    private javax.swing.JTextField jTextField_TelPer_Madre;
    private javax.swing.JTextField jTextField_TelPer_Padre;
    private javax.swing.JTextField jTextField_TelPer_Tutor;
    private javax.swing.JTextField jTextField_TelTra_Madre;
    private javax.swing.JTextField jTextField_TelTra_Padre;
    private javax.swing.JTextField jTextField_TelTra_Tutor;
    private javax.swing.JTextField jTextField_Telefono;
    private javax.swing.JTextField jTextField_Turno_PagoIns;
    private com.toedter.calendar.JYearChooser jYearChooserCicloLectivo;
    private com.toedter.calendar.JYearChooser jYearChooserCicloLectivoInsc;
    private com.toedter.calendar.JYearChooser jYearChooserControl;
    // End of variables declaration//GEN-END:variables
    
    private void borrarLabelsDatosAlumno(){
        jLabel_ControlMedico.setText("");
        jLabel_ControlNatacion.setText("");
        jLabel_Dni.setText("");
        jLabel_Domicilio.setText("");
        jLabel_Edad.setText("");
        jLabel_FechaNacimiento.setText("");
        jLabel_LugarNacimiento.setText("");
        jLabel_Madre.setText("");
        jLabel_NombreYApellido.setText("");
        jLabel_OtrosDatos.setText("");
        jLabel_Padre.setText("");
        jLabel_Sala.setText("");
        jLabel_TelefonoEmergencia.setText("");
        jLabel_TelefonoPersonalMadre.setText("");
        jLabel_TelefonoPersonalPadre.setText("");
        jLabel_TelefonoPersonalTutor.setText("");
        jLabel_TelefonoTrabajoMadre.setText("");
        jLabel_TelefonoTrabajoPadre.setText("");
        jLabel_TelefonoTrabajoTutor .setText("");
        jLabel_TraeMateriales .setText("");
        jLabel_Tutor.setText("");
        jLabel_Vacunas .setText("");
    }
    
    private void borrarTextFieldInscripcion(){
        jTextField_ApyNom.setEnabled(true);
        jDateChooserFechaNacimiento.setEnabled(true);
        jTextField_LugarNacimiento.setEnabled(true);
        jTextField_DNI_Ins.setEnabled(true);
        jTextField_Domicilio.setEnabled(true);
        jTextField_Telefono.setEnabled(true);
        jTextAreaOtrosDatos.setEnabled(true);
        jCheckBoxMedico.setEnabled(true);
        jCheckBoxNatacion.setEnabled(true);
        jCheckBoxTraeMateriales.setEnabled(true);
        jCheckBoxVacunas.setEnabled(true);
        
        jTextField_ApyNom.setText("");
        jTextField_LugarNacimiento.setText("");
        jTextField_Edad.setText("");
        jTextField_DNI_Ins.setText("");
        jTextField_Domicilio.setText("");
        jTextField_Telefono.setText("");
        jTextAreaOtrosDatos.setText("");
        jCheckBoxMedico.setSelected(false);
        jCheckBoxNatacion.setSelected(false);
        jCheckBoxTraeMateriales.setSelected(false);
        jCheckBoxVacunas.setSelected(false);

        jRadioButtonAgregarPadre.setSelected(true);
        jRadioButtonAgregarPadre.setEnabled(true);
        jTextField_ApyNom_Padre.setText("");
        jTextField_NumDoc_Padre.setText("");
        jTextField_Ocupacion_Padre.setText("");
        jTextField_TelPer_Padre.setText("");
        jTextField_TelTra_Padre.setText("");

        jRadioButtonAgregarMadre.setSelected(true);
        jRadioButtonAgregarMadre.setEnabled(true);
        jTextField_ApyNom_Madre.setText("");
        jTextField_NumDoc_Madre.setText("");
        jTextField_Ocupacion_Madre.setText("");
        jTextField_TelPer_Madre.setText("");
        jTextField_TelTra_Madre.setText("");

        jRadioButtonAgregarTutor.setSelected(false);
        jTextField_ApyNom_Tutor.setText("");
        jTextField_NumDoc_Tutor.setText("");
        jTextField_Relacion.setText("");
        jTextField_Ocupacion_Tutor.setText("");
        jTextField_TelPer_Tutor.setText("");
        jTextField_TelTra_Tutor.setText("");
        
        Calendar cal= Calendar.getInstance();
        jYearChooserCicloLectivoInsc.setValue(cal.get(Calendar.YEAR));
    }
    
    /**
     * 
     * @param valorComboBox1
     * @param buscado
     * @param salaS
     * @param turnoS
     * @param modelo
     * @param tipo 0: AyN DNI Sala Turno<br>1: AyN Sala Turno Insc, Mat, Nat<br>2: AyN Sala Turno Cuotas
     */
    public void cargarTabla(String valorComboBox1, String buscado, int salaS, int turnoS, DefaultTableModel modelo, int tipo){
        modelo.setRowCount(0);
        switch(salaS){
            case 0:
                    switch(turnoS){
                        case 0:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    if(valorComboBox1.equals("Apellido y Nombre")){
                                        String nombre = a.getApellidoYNombre().toUpperCase();
                                        if(nombre.contains(buscado)){
                                            int año = a.obtenerUltimoAñoLectivo();
                                            modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                        }
                                    }
                                    else{
                                        String dni = String.valueOf(a.getDni());
                                        if(dni.contains(buscado)){
                                            int año = a.obtenerUltimoAñoLectivo();
                                            modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                        } 
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    String turno = a.getSalas().get(año).getTurno();
                                    if(turno.equalsIgnoreCase("Mañana"))
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    String turno = a.getSalas().get(año).getTurno();
                                    if(turno.equalsIgnoreCase("Mañana")){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    String turno = a.getSalas().get(año).getTurno();
                                    if(turno.equalsIgnoreCase("Tarde"))
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    String turno = a.getSalas().get(año).getTurno();
                                    if(turno.equalsIgnoreCase("Tarde")){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                    }
                    break;
            case 1:
                    switch(turnoS){
                        case 0:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    if(edad == 5)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    if(edad == 5){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 5)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 5){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 6)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 6){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                    }
                    break;
            case 2:
                    switch(turnoS){
                        case 0:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    if(edad == 4)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    if(edad == 4){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 3)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 3){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 4)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 4){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;         
                    }
                    break;
            case 3:
                    switch(turnoS){
                        case 0:    
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    if(edad == 3)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    if(edad == 3){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 1)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 1){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 2)
                                        modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int año = a.obtenerUltimoAñoLectivo();
                                    int edad = a.getSalas().get(año).getEdad();
                                    int idSala = a.getSalas().get(año).getIdSala();
                                    if(idSala == 2){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                modelo.addRow(this.obetenerObjeto(a,año,tipo));
                                            } 
                                        }
                                    }
                                }
                            }
                            break; 
                    }
                    break;
        }
    }
    private Object[] obetenerObjeto(Alumno a, int año, int tipo){
        Object[] objeto;
        switch(tipo){
            case 0: 
                objeto = new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(año).getEdad(),a.getSalas().get(año).getTurno()};
                break;
            case 1: 
                Set<Pago> pagos = a.getPagos();
                Iterator i = pagos.iterator();//Nunca va a ser null
                int valorPeriodoInsc = jYearChooserControl.getYear();
                float insc=0, mat= 0, sac1 = 0, sac2 = 0, natab = 0, natma = 0, natju = 0, natag = 0, natsep = 0, natoct = 0;
                boolean encontroInscripcion = false;
                //Busco los  pagos existentes del alumno seleccionado
                while(i.hasNext()){
                    Pago pago = (Pago) i.next();
                    if(Integer.parseInt(pago.getPeriodo()) == valorPeriodoInsc && pago.getTipoPago().equals("INSCRIPCION")){
                        pagoSeleccionado = pago;
                        encontroInscripcion = true;
                        nuevo = false;
                        break;
                    }
                    
                }
                if(encontroInscripcion){
                    insc = pagoSeleccionado.getMontoPagado();
                }
                objeto = new Object[]{a.getApellidoYNombre(),a.getSalas().get(año).getEdad(),a.getSalas().get(año).getTurno(), insc, mat, sac1, sac2, natab, natma, natju, natag, natsep, natoct};
                break;
            default: objeto = null;
        }
        
        return objeto;
    }
}

