/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import ClasesBase.Alumno;
import ClasesBase.Managers.*;
import ClasesBase.Pago;
import ClasesBase.RegistroAsistencia;
import ClasesBase.Retiro;
import ClasesBase.Sala;
import ClasesBase.Tutor;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Facu SSD
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private DefaultTableModel model;
    private List<Alumno> listaAlumnos;
    
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFondo = new javax.swing.JPanel();
        jPanelInterseccion = new javax.swing.JPanel();
        jPanelPestanas = new javax.swing.JPanel();
        jPanelOpInscripcion = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanelOpPago = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelOpDatosAlumnos = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jPanelTitulo = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jPanelCard = new javax.swing.JPanel();
        jPanelInscripcion = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField_LugarNacimiento = new javax.swing.JTextField();
        jTextField_ApyNom = new javax.swing.JTextField();
        jComboBoxSala_Insc = new javax.swing.JComboBox<>();
        jTextField_Edad = new javax.swing.JTextField();
        jTextField_Domicilio = new javax.swing.JTextField();
        jTextField_Telefono = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxTurno_Insc = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOtrosDatos = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jTextField_NumDoc_Padre = new javax.swing.JTextField();
        jTextField_TipoDoc_Padre = new javax.swing.JTextField();
        jTextField_ApyNom_Padre = new javax.swing.JTextField();
        jTextField_Ocupacion_Padre = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField_NumDoc_Madre = new javax.swing.JTextField();
        jTextField_TipoDoc_Madre = new javax.swing.JTextField();
        jTextField_ApyNom_Madre = new javax.swing.JTextField();
        jTextField_Ocupacion_Madre = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextField_ApyNom_Tutor = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField_TipoDoc_Tutor = new javax.swing.JTextField();
        jTextField_NumDoc_Tutor = new javax.swing.JTextField();
        jTextField_Ocupacion_Tutor = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField_Relacion = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jTextField_TelPer_Padre = new javax.swing.JTextField();
        jTextField_TelTra_Padre = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jTextField_TelPer_Madre = new javax.swing.JTextField();
        jTextField_TelTra_Madre = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jTextField_TelPer_Tutor = new javax.swing.JTextField();
        jTextField_TelTra_Tutor = new javax.swing.JTextField();
        jDateChooserFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel52 = new javax.swing.JLabel();
        jTextField_DNI_Ins = new javax.swing.JTextField();
        jCheckBoxTraeMateriales = new javax.swing.JCheckBox();
        jCheckBoxMedico = new javax.swing.JCheckBox();
        jCheckBoxVacunas = new javax.swing.JCheckBox();
        jCheckBoxNatacion = new javax.swing.JCheckBox();
        jButton_Inscribir = new javax.swing.JButton();
        jRadioButtonAgregarTutor = new javax.swing.JRadioButton();
        jRadioButtonAgregarPadre = new javax.swing.JRadioButton();
        jRadioButtonAgregarMadre = new javax.swing.JRadioButton();
        jPanelPago = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jComboBoxTipoDePago = new javax.swing.JComboBox<>();
        jPanelTipoPago = new javax.swing.JPanel();
        jPanelPagpInsc = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField_Sala_PagoIns = new javax.swing.JTextField();
        jTextField_NomyAp_PagoIns = new javax.swing.JTextField();
        jTextField_Turno_PagoIns = new javax.swing.JTextField();
        jSpinner_Cuotas_PagoIns = new javax.swing.JSpinner();
        jLabel49 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jLabelTotalPagado = new javax.swing.JLabel();
        jLabelMontoAPagar = new javax.swing.JLabel();
        jLabelMontoCuota = new javax.swing.JLabel();
        jButtonRegistrarPago = new javax.swing.JButton();
        jPanelCuota = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jTextFieldBusqueda_Pago = new javax.swing.JTextField();
        jComboBoxBusqueda_Pago = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePago = new javax.swing.JTable();
        jComboBoxSalaPago = new javax.swing.JComboBox<>();
        jComboBoxTurnoPago = new javax.swing.JComboBox<>();
        jPanelDatosAlumnos = new javax.swing.JPanel();
        jPanelBarraSup = new javax.swing.JPanel();
        jPanelCerrar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelMinimizar = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jardin Ã‘andeni");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1360, 768));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1360, 768));

        jPanelInterseccion.setMaximumSize(new java.awt.Dimension(150, 100));
        jPanelInterseccion.setMinimumSize(new java.awt.Dimension(150, 100));
        jPanelInterseccion.setPreferredSize(new java.awt.Dimension(150, 100));

        javax.swing.GroupLayout jPanelInterseccionLayout = new javax.swing.GroupLayout(jPanelInterseccion);
        jPanelInterseccion.setLayout(jPanelInterseccionLayout);
        jPanelInterseccionLayout.setHorizontalGroup(
            jPanelInterseccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelInterseccionLayout.setVerticalGroup(
            jPanelInterseccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanelOpInscripcion.setBackground(new java.awt.Color(112, 163, 204));
        jPanelOpInscripcion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanelOpInscripcion.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanelOpInscripcion.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpInscripcionMouseMoved(evt);
            }
        });
        jPanelOpInscripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelOpInscripcionMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpInscripcionMouseExited(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Inscripcion para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelOpInscripcionLayout = new javax.swing.GroupLayout(jPanelOpInscripcion);
        jPanelOpInscripcion.setLayout(jPanelOpInscripcionLayout);
        jPanelOpInscripcionLayout.setHorizontalGroup(
            jPanelOpInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpInscripcionLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, 0))
        );
        jPanelOpInscripcionLayout.setVerticalGroup(
            jPanelOpInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOpInscripcionLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelOpPago.setBackground(new java.awt.Color(132, 183, 224));
        jPanelOpPago.setPreferredSize(new java.awt.Dimension(150, 100));
        jPanelOpPago.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpPagoMouseMoved(evt);
            }
        });
        jPanelOpPago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelOpPagoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpPagoMouseExited(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Pago para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelOpPagoLayout = new javax.swing.GroupLayout(jPanelOpPago);
        jPanelOpPago.setLayout(jPanelOpPagoLayout);
        jPanelOpPagoLayout.setHorizontalGroup(
            jPanelOpPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpPagoLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelOpPagoLayout.setVerticalGroup(
            jPanelOpPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpPagoLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelOpDatosAlumnos.setBackground(new java.awt.Color(112, 163, 204));
        jPanelOpDatosAlumnos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelOpDatosAlumnosMouseMoved(evt);
            }
        });
        jPanelOpDatosAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelOpDatosAlumnosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOpDatosAlumnosMouseExited(evt);
            }
        });

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Datos para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelOpDatosAlumnosLayout = new javax.swing.GroupLayout(jPanelOpDatosAlumnos);
        jPanelOpDatosAlumnos.setLayout(jPanelOpDatosAlumnosLayout);
        jPanelOpDatosAlumnosLayout.setHorizontalGroup(
            jPanelOpDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpDatosAlumnosLayout.createSequentialGroup()
                .addComponent(jLabel50)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelOpDatosAlumnosLayout.setVerticalGroup(
            jPanelOpDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelPestanasLayout = new javax.swing.GroupLayout(jPanelPestanas);
        jPanelPestanas.setLayout(jPanelPestanasLayout);
        jPanelPestanasLayout.setHorizontalGroup(
            jPanelPestanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPestanasLayout.createSequentialGroup()
                .addGroup(jPanelPestanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelOpPago, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jPanelOpInscripcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jPanelOpDatosAlumnos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanelPestanasLayout.setVerticalGroup(
            jPanelPestanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPestanasLayout.createSequentialGroup()
                .addComponent(jPanelOpInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOpPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOpDatosAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/Imagenes/Jardin Ã‘andeni para facu.png"))); // NOI18N

        javax.swing.GroupLayout jPanelTituloLayout = new javax.swing.GroupLayout(jPanelTitulo);
        jPanelTitulo.setLayout(jPanelTituloLayout);
        jPanelTituloLayout.setHorizontalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addComponent(jLabel51)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelTituloLayout.setVerticalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addComponent(jLabel51)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelCard.setLayout(new java.awt.CardLayout());

        jLabel3.setText("Ficha de InscripciÃ³n y legajo");

        jLabel6.setText("Datos del alumno");

        jLabel7.setText("Sala");

        jLabel8.setText("Apellido y Nombre");

        jLabel9.setText("Fecha de Nacimiento");

        jLabel10.setText("Lugar de Nacimiento");

        jLabel11.setText("Edad");

        jLabel12.setText("Domicilio");

        jLabel13.setText("Telefono");

        jTextField_LugarNacimiento.setText("San Luis");

        jTextField_ApyNom.setText("Juan Perez");

        jComboBoxSala_Insc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5 AÃ±os", "4 AÃ±os", "3 AÃ±os" }));

        jTextField_Edad.setEditable(false);
        jTextField_Edad.setBackground(new java.awt.Color(255, 255, 255));

        jTextField_Domicilio.setText("Balcarce 123");

        jTextField_Telefono.setText("2664584736");

        jLabel14.setText("Turno");

        jComboBoxTurno_Insc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MaÃ±ana", "Tarde" }));

        jLabel15.setText("Otros Datos");

        jTextAreaOtrosDatos.setColumns(20);
        jTextAreaOtrosDatos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextAreaOtrosDatos.setRows(5);
        jTextAreaOtrosDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextAreaOtrosDatos);

        jLabel17.setText("Apellido y Nombre");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel18.setText("Tipo de Documento");

        jLabel19.setText("NÃºmero de Documento");

        jLabel20.setText("Ocupacion");

        jTextField_NumDoc_Padre.setText("35214698");

        jTextField_TipoDoc_Padre.setText("DNI");

        jTextField_ApyNom_Padre.setText("Pedro Perez");

        jTextField_Ocupacion_Padre.setText("Anestesista");

        jLabel21.setText("Datos del padre");

        jLabel22.setText("Datos de la madre");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel16.setText("Apellido y Nombre");

        jLabel23.setText("Tipo de Documento");

        jLabel24.setText("NÃºmero de Documento");

        jLabel25.setText("Ocupacion");

        jTextField_NumDoc_Madre.setText("36478124");

        jTextField_TipoDoc_Madre.setText("DNI");

        jTextField_ApyNom_Madre.setText("Lucia Lopez");

        jTextField_Ocupacion_Madre.setText("Ginecologa");

        jLabel26.setText("Datos del tutor");

        jLabel27.setText("En caso de no ser los padres");
        jLabel27.setEnabled(false);

        jLabel28.setText("Apellido y Nombre");
        jLabel28.setEnabled(false);

        jTextField_ApyNom_Tutor.setEnabled(false);

        jLabel29.setText("Tipo de Documento");
        jLabel29.setEnabled(false);

        jLabel30.setText("Numero de Documento");
        jLabel30.setEnabled(false);

        jLabel31.setText("Ocupacion");
        jLabel31.setEnabled(false);

        jTextField_TipoDoc_Tutor.setEnabled(false);

        jTextField_NumDoc_Tutor.setEnabled(false);

        jTextField_Ocupacion_Tutor.setEnabled(false);

        jLabel32.setText("RelaciÃ³n");
        jLabel32.setEnabled(false);

        jTextField_Relacion.setEnabled(false);

        jLabel42.setText("Telefono Personal");

        jLabel44.setText("Telefono Trabajo");

        jTextField_TelPer_Padre.setText("2664584736");

        jTextField_TelTra_Padre.setText("4425789");

        jLabel45.setText("Telefono Personal");

        jLabel46.setText("Telefono Trabajo");

        jTextField_TelPer_Madre.setText("2664321785");

        jTextField_TelTra_Madre.setText("4458963");

        jLabel47.setText("Telefono Personal");
        jLabel47.setEnabled(false);

        jLabel48.setText("Telefono Trabajo");
        jLabel48.setEnabled(false);

        jTextField_TelPer_Tutor.setEnabled(false);

        jTextField_TelTra_Tutor.setEnabled(false);

        jDateChooserFechaNacimiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserFechaNacimientoPropertyChange(evt);
            }
        });

        jLabel52.setText("DNI (sin puntos)");

        jTextField_DNI_Ins.setText("55685214");

        jCheckBoxTraeMateriales.setText("Trae Materiales");

        jCheckBoxMedico.setText("Control MÃ©dico");

        jCheckBoxVacunas.setText("Vacunas");

        jCheckBoxNatacion.setText("Control Natacion");

        jButton_Inscribir.setText("Inscribir");
        jButton_Inscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InscribirActionPerformed(evt);
            }
        });

        jRadioButtonAgregarTutor.setText("Incluir");
        jRadioButtonAgregarTutor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonAgregarTutorStateChanged(evt);
            }
        });

        jRadioButtonAgregarPadre.setSelected(true);
        jRadioButtonAgregarPadre.setText("Incluir");
        jRadioButtonAgregarPadre.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonAgregarPadreStateChanged(evt);
            }
        });

        jRadioButtonAgregarMadre.setSelected(true);
        jRadioButtonAgregarMadre.setText("Incluir");

        javax.swing.GroupLayout jPanelInscripcionLayout = new javax.swing.GroupLayout(jPanelInscripcion);
        jPanelInscripcion.setLayout(jPanelInscripcionLayout);
        jPanelInscripcionLayout.setHorizontalGroup(
            jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addComponent(jComboBoxSala_Insc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14)
                                .addGap(30, 30, 30)
                                .addComponent(jComboBoxTurno_Insc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jDateChooserFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_ApyNom)))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel52))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_LugarNacimiento)
                            .addComponent(jTextField_Edad)
                            .addComponent(jTextField_Domicilio)
                            .addComponent(jTextField_DNI_Ins)
                            .addComponent(jTextField_Telefono)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxTraeMateriales)
                                    .addComponent(jCheckBoxVacunas))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxNatacion)
                                    .addComponent(jCheckBoxMedico))))))
                .addGap(42, 42, 42)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                                .addComponent(jLabel24)
                                                .addGap(25, 25, 25)
                                                .addComponent(jTextField_NumDoc_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextField_TipoDoc_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_ApyNom_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jRadioButtonAgregarMadre))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInscripcionLayout.createSequentialGroup()
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel25)
                                                .addComponent(jLabel46))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField_Ocupacion_Madre, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                                .addComponent(jTextField_TelPer_Madre)
                                                .addComponent(jTextField_TelTra_Madre))))
                                    .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                            .addComponent(jLabel21)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jRadioButtonAgregarPadre))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInscripcionLayout.createSequentialGroup()
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel17)
                                                .addComponent(jLabel18)
                                                .addComponent(jLabel19)
                                                .addComponent(jLabel20)
                                                .addComponent(jLabel42)
                                                .addComponent(jLabel44))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                            .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextField_ApyNom_Padre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TipoDoc_Padre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_NumDoc_Padre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_Ocupacion_Padre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TelPer_Padre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_TelTra_Padre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)))
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInscripcionLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                                .addComponent(jButton_Inscribir)
                                .addGap(181, 181, 181))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel48)
                                    .addComponent(jLabel47))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInscripcionLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel22))
                                .addGap(284, 284, 284)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                .addComponent(jRadioButtonAgregarTutor))
                            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel32))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_TelTra_Tutor)
                                    .addComponent(jTextField_TipoDoc_Tutor)
                                    .addComponent(jTextField_ApyNom_Tutor)
                                    .addComponent(jTextField_NumDoc_Tutor)
                                    .addComponent(jTextField_Ocupacion_Tutor)
                                    .addComponent(jTextField_Relacion)
                                    .addComponent(jTextField_TelPer_Tutor, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                        .addContainerGap(100, Short.MAX_VALUE))))
        );
        jPanelInscripcionLayout.setVerticalGroup(
            jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator4)
            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addComponent(jRadioButtonAgregarPadre)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField_ApyNom_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBoxSala_Insc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBoxTurno_Insc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField_ApyNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jDateChooserFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField_LugarNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(jTextField_DNI_Ins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField_Domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxTraeMateriales)
                            .addComponent(jCheckBoxMedico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxVacunas)
                            .addComponent(jCheckBoxNatacion)))
                    .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTextField_TipoDoc_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jTextField_NumDoc_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jTextField_Ocupacion_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(jTextField_TelPer_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(jTextField_TelTra_Padre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jRadioButtonAgregarMadre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField_ApyNom_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jTextField_TipoDoc_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(jTextField_NumDoc_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jTextField_Ocupacion_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(jTextField_TelPer_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(jTextField_TelTra_Madre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelInscripcionLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jRadioButtonAgregarTutor))
                .addGap(18, 18, 18)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jTextField_ApyNom_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField_TipoDoc_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextField_NumDoc_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jTextField_Ocupacion_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jTextField_Relacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(jTextField_TelPer_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanelInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jTextField_TelTra_Tutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(jButton_Inscribir)
                .addGap(96, 96, 96))
        );

        jPanelCard.add(jPanelInscripcion, "inscripcion");

        jLabel2.setText("Tipo de pago");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jComboBoxTipoDePago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inscripcion", "Cuota", "Materiales", "SAC", "Natacion" }));
        jComboBoxTipoDePago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoDePagoItemStateChanged(evt);
            }
        });

        jPanelTipoPago.setLayout(new java.awt.CardLayout());

        jLabel34.setText("Apellido y Nombre");

        jLabel35.setText("Sala");

        jLabel36.setText("Turno");

        jLabel37.setText("Cuotas");

        jLabel38.setText("Total Pagado");

        jLabel39.setText("Monto a pagar");

        jLabel40.setText("Monto de la cuota");

        jSpinner_Cuotas_PagoIns.setModel(new javax.swing.SpinnerNumberModel(1, 1, 4, 1));

        jLabel49.setText("Ciclo Lectivo");

        jYearChooser1.setVerifyInputWhenFocusTarget(false);

        jLabelTotalPagado.setText("jLabel53");

        jLabelMontoAPagar.setText("jLabel53");

        jLabelMontoCuota.setText("jLabel53");

        jButtonRegistrarPago.setText("Registrar pago");

        javax.swing.GroupLayout jPanelPagpInscLayout = new javax.swing.GroupLayout(jPanelPagpInsc);
        jPanelPagpInsc.setLayout(jPanelPagpInscLayout);
        jPanelPagpInscLayout.setHorizontalGroup(
            jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel49))
                                .addGap(50, 50, 50)
                                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_NomyAp_PagoIns, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(jTextField_Sala_PagoIns)
                                    .addComponent(jTextField_Turno_PagoIns)
                                    .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                                        .addComponent(jYearChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(156, 156, 156))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPagpInscLayout.createSequentialGroup()
                                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel39)
                                    .addComponent(jLabel40))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelMontoCuota)
                                    .addComponent(jLabelMontoAPagar)
                                    .addComponent(jLabelTotalPagado)
                                    .addComponent(jSpinner_Cuotas_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(156, 156, 156))))
                    .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jButtonRegistrarPago)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanelPagpInscLayout.setVerticalGroup(
            jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagpInscLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField_NomyAp_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField_Sala_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jTextField_Turno_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jSpinner_Cuotas_PagoIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabelTotalPagado))
                .addGap(24, 24, 24)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabelMontoAPagar))
                .addGap(24, 24, 24)
                .addGroup(jPanelPagpInscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabelMontoCuota))
                .addGap(66, 66, 66)
                .addComponent(jButtonRegistrarPago)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jPanelTipoPago.add(jPanelPagpInsc, "pagoInscripcion");

        jLabel41.setText("Pago cuota");

        javax.swing.GroupLayout jPanelCuotaLayout = new javax.swing.GroupLayout(jPanelCuota);
        jPanelCuota.setLayout(jPanelCuotaLayout);
        jPanelCuotaLayout.setHorizontalGroup(
            jPanelCuotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCuotaLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel41)
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanelCuotaLayout.setVerticalGroup(
            jPanelCuotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCuotaLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel41)
                .addContainerGap(424, Short.MAX_VALUE))
        );

        jPanelTipoPago.add(jPanelCuota, "pagoCuota");

        jLabel43.setText("Buscar Alumno");

        jTextFieldBusqueda_Pago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBusqueda_PagoKeyReleased(evt);
            }
        });

        jComboBoxBusqueda_Pago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apellido y Nombre", "DNI" }));
        jComboBoxBusqueda_Pago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBusqueda_PagoItemStateChanged(evt);
            }
        });

        jTablePago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido y Nombre", "DNI", "Sala", "Turno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePagoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePago);

        jComboBoxSalaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala", "5 aÃ±os", "4 aÃ±os", "3 aÃ±os" }));
        jComboBoxSalaPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSalaPagoItemStateChanged(evt);
            }
        });

        jComboBoxTurnoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turno", "MaÃ±ana", "Tarde" }));
        jComboBoxTurnoPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTurnoPagoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxSalaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTurnoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jTextFieldBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBusqueda_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSalaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTurnoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelPagoLayout = new javax.swing.GroupLayout(jPanelPago);
        jPanelPago.setLayout(jPanelPagoLayout);
        jPanelPagoLayout.setHorizontalGroup(
            jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPagoLayout.createSequentialGroup()
                .addGroup(jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPagoLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addGap(41, 41, 41)
                        .addComponent(jComboBoxTipoDePago, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPagoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelPagoLayout.setVerticalGroup(
            jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelPagoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxTipoDePago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTipoPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPagoLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCard.add(jPanelPago, "pago");

        javax.swing.GroupLayout jPanelDatosAlumnosLayout = new javax.swing.GroupLayout(jPanelDatosAlumnos);
        jPanelDatosAlumnos.setLayout(jPanelDatosAlumnosLayout);
        jPanelDatosAlumnosLayout.setHorizontalGroup(
            jPanelDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1214, Short.MAX_VALUE)
        );
        jPanelDatosAlumnosLayout.setVerticalGroup(
            jPanelDatosAlumnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
        );

        jPanelCard.add(jPanelDatosAlumnos, "datosAlumnos");

        jPanelCerrar.setBackground(new java.awt.Color(200, 0, 0));
        jPanelCerrar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelCerrarMouseMoved(evt);
            }
        });
        jPanelCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelCerrarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelCerrarMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("X");

        javax.swing.GroupLayout jPanelCerrarLayout = new javax.swing.GroupLayout(jPanelCerrar);
        jPanelCerrar.setLayout(jPanelCerrarLayout);
        jPanelCerrarLayout.setHorizontalGroup(
            jPanelCerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCerrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCerrarLayout.setVerticalGroup(
            jPanelCerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCerrarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jPanelMinimizar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelMinimizarMouseMoved(evt);
            }
        });
        jPanelMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelMinimizarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelMinimizarMouseExited(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel33.setText("_");

        javax.swing.GroupLayout jPanelMinimizarLayout = new javax.swing.GroupLayout(jPanelMinimizar);
        jPanelMinimizar.setLayout(jPanelMinimizarLayout);
        jPanelMinimizarLayout.setHorizontalGroup(
            jPanelMinimizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMinimizarLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel33)
                .addContainerGap())
        );
        jPanelMinimizarLayout.setVerticalGroup(
            jPanelMinimizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel33)
        );

        javax.swing.GroupLayout jPanelBarraSupLayout = new javax.swing.GroupLayout(jPanelBarraSup);
        jPanelBarraSup.setLayout(jPanelBarraSupLayout);
        jPanelBarraSupLayout.setHorizontalGroup(
            jPanelBarraSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBarraSupLayout.createSequentialGroup()
                .addContainerGap(1291, Short.MAX_VALUE)
                .addComponent(jPanelMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanelBarraSupLayout.setVerticalGroup(
            jPanelBarraSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBarraSupLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelBarraSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMinimizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanelFondoLayout = new javax.swing.GroupLayout(jPanelFondo);
        jPanelFondo.setLayout(jPanelFondoLayout);
        jPanelFondoLayout.setHorizontalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelInterseccion, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addGroup(jPanelFondoLayout.createSequentialGroup()
                        .addComponent(jPanelPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCard, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFondoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelBarraSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanelFondoLayout.setVerticalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addComponent(jPanelBarraSup, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelInterseccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPestanas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jPanelCerrarMouseClicked

    private void jPanelOpInscripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpInscripcionMouseClicked
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "inscripcion");
    }//GEN-LAST:event_jPanelOpInscripcionMouseClicked

    private void jPanelOpPagoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpPagoMouseClicked
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "pago");
        model = (DefaultTableModel) jTablePago.getModel();
        ManagerAlumno ma = ManagerAlumno.getManager();
        listaAlumnos = ma.obtenerTodosAlumno();
        cargarTabla();
        jTextField_NomyAp_PagoIns.setEditable(false);
        jTextField_Sala_PagoIns.setEditable(false);
        jTextField_Turno_PagoIns.setEditable(false);
        jSpinner_Cuotas_PagoIns.setValue(1);
        jSpinner_Cuotas_PagoIns.setEditor(new JSpinner.DefaultEditor(jSpinner_Cuotas_PagoIns));
        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel();
        modeloSpinner.setMaximum(4);
        modeloSpinner.setMinimum(1);
        jSpinner_Cuotas_PagoIns.setModel(modeloSpinner);
        Calendar cal= Calendar.getInstance();
        jYearChooser1.setValue(cal.get(Calendar.YEAR));
        jYearChooser1.setStartYear(cal.get(Calendar.YEAR));
        JSpinner spinner = (JSpinner)jYearChooser1.getSpinner();
        ((javax.swing.JTextField)spinner.getEditor()).setEditable(false);
        jLabelMontoAPagar.setText("-");
        jLabelMontoCuota.setText("-");
        jLabelTotalPagado.setText("-");
        jButtonRegistrarPago.setEnabled(false);
    }//GEN-LAST:event_jPanelOpPagoMouseClicked

    private void jPanelCerrarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCerrarMouseMoved
        jPanelCerrar.setBackground(Color.red);
    }//GEN-LAST:event_jPanelCerrarMouseMoved

    private void jPanelCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCerrarMouseExited
        jPanelCerrar.setBackground(new Color(200, 0, 0));
    }//GEN-LAST:event_jPanelCerrarMouseExited

    private void jPanelOpInscripcionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpInscripcionMouseExited
        jPanelOpInscripcion.setBackground(new Color(112, 163, 204));
    }//GEN-LAST:event_jPanelOpInscripcionMouseExited

    private void jPanelOpInscripcionMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpInscripcionMouseMoved
        jPanelOpInscripcion.setBackground(new Color(142, 193, 234));
    }//GEN-LAST:event_jPanelOpInscripcionMouseMoved

    private void jPanelOpPagoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpPagoMouseMoved
        jPanelOpPago.setBackground(new Color(162, 213, 254));
    }//GEN-LAST:event_jPanelOpPagoMouseMoved

    private void jPanelOpPagoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpPagoMouseExited
        jPanelOpPago.setBackground(new Color(132, 183, 224));
    }//GEN-LAST:event_jPanelOpPagoMouseExited

    private void jPanelMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMinimizarMouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jPanelMinimizarMouseClicked

    private void jPanelMinimizarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMinimizarMouseMoved
        jPanelMinimizar.setBackground(new Color(132, 183, 224));
    }//GEN-LAST:event_jPanelMinimizarMouseMoved

    private void jPanelMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMinimizarMouseExited
        jPanelMinimizar.setBackground(new Color(215, 215, 215));
    }//GEN-LAST:event_jPanelMinimizarMouseExited

    private void jComboBoxTipoDePagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoDePagoItemStateChanged
        CardLayout card;
        switch(jComboBoxTipoDePago.getSelectedIndex()){
            case 0: card = (CardLayout)jPanelTipoPago.getLayout();
                    card.show(jPanelTipoPago, "pagoInscripcion");break;
            case 1: card = (CardLayout)jPanelTipoPago.getLayout();
                    card.show(jPanelTipoPago, "pagoCuota");break;
            
        }
    }//GEN-LAST:event_jComboBoxTipoDePagoItemStateChanged

    private void jPanelOpDatosAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpDatosAlumnosMouseClicked
        CardLayout card = (CardLayout)jPanelCard.getLayout();
        card.show(jPanelCard, "datosAlumnos");
    }//GEN-LAST:event_jPanelOpDatosAlumnosMouseClicked

    private void jPanelOpDatosAlumnosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpDatosAlumnosMouseExited
        jPanelOpDatosAlumnos.setBackground(new Color(112, 163, 204));
    }//GEN-LAST:event_jPanelOpDatosAlumnosMouseExited

    private void jPanelOpDatosAlumnosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOpDatosAlumnosMouseMoved
        jPanelOpDatosAlumnos.setBackground(new Color(142, 193, 234));
    }//GEN-LAST:event_jPanelOpDatosAlumnosMouseMoved

    private void jButton_InscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InscribirActionPerformed
        //Variables para controles de la primer columna
        String lugarNacimiento="", domicilio="", otrosDatos="", apellidoYNombre="";
        Date fechaDeNacimiento = new Date();
        long telefono = -1;
        int dni = -1; 
        boolean controlMedico, vacunas, controlNatacion, traeMateriales, error = false;
        Set<Alumno> hermanos = new HashSet();
        Set<Tutor> tutores = new HashSet();
        Set<Pago> pagos = new TreeSet();
        Map<Integer, Sala> salas = new HashMap();
        Set<RegistroAsistencia> ra = new HashSet();
        apellidoYNombre = jTextField_ApyNom.getText();
        Sala sala;
        int salaEdad, salaTurno, idSala;
        ManagerAlumno mngAlumno = ManagerAlumno.getManager();
        Alumno alumno;
        ManagerTutor mngTutor = ManagerTutor.getManager();
        Tutor tutor;
        ManagerSala mngSala = ManagerSala.getManagerSala();
        
        //Controles de la primer columna
        salaEdad = jComboBoxSala_Insc.getSelectedIndex();
        salaTurno = jComboBoxTurno_Insc.getSelectedIndex();
        idSala = salaEdad + salaTurno +1;
        sala = mngSala.getSala(idSala);
        salas.put(idSala, sala);
        
        if(apellidoYNombre.isEmpty()){
            error = true;
            JOptionPane.showMessageDialog(null,"El nombre del alumno no puede ser vacio", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
        }
        if(!error){
            fechaDeNacimiento = jDateChooserFechaNacimiento.getDate();
            if(fechaDeNacimiento == null){
                error = true;
                JOptionPane.showMessageDialog(null,"Debe seleccionar una fecha de nacimiento", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            lugarNacimiento = jTextField_LugarNacimiento.getText();
            if(lugarNacimiento.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Lugar de nacimiento no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                dni = new Integer (jTextField_DNI_Ins.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            domicilio = jTextField_Domicilio.getText();
            if(domicilio.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Domicilio no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                telefono = new Long(jTextField_Telefono.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        otrosDatos = jTextAreaOtrosDatos.getText();
        if(!error){
            if(otrosDatos.length()>100){
                error = true;
                JOptionPane.showMessageDialog(null,"Otros datos es muy largo", "Exceso de texto",JOptionPane.WARNING_MESSAGE);
            }
        }   
        traeMateriales = jCheckBoxTraeMateriales.isSelected();
        vacunas = jCheckBoxVacunas.isSelected();
        controlMedico = jCheckBoxMedico.isSelected();
        controlNatacion = jCheckBoxNatacion.isSelected();
        //Variables para control del resto de columnas
        //Primer paso: Padre
        String ocupacion = "", tipoDniT = "", relacion = "Padre", apellidoYNombreT = "";
        int dniT = 0;
        long telefonoPersonal = 0, telefonoTrabajo = 0;
        Set<Alumno> atutorados = new TreeSet();
        Set<Retiro> retiros = new TreeSet();
        
        if(!error){
            apellidoYNombreT = jTextField_ApyNom_Padre.getText();
            if(apellidoYNombreT.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Nombre del padre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            tipoDniT = jTextField_TipoDoc_Padre.getText();
            if(tipoDniT.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Tipo DNI del padre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                dniT = new Integer (jTextField_NumDoc_Padre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            ocupacion = jTextField_Ocupacion_Padre.getText();
            if(ocupacion.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"ocupacion del padre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                telefonoPersonal = new Long(jTextField_TelPer_Padre.getText());
                telefonoTrabajo = new Long(jTextField_TelTra_Padre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error && jRadioButtonAgregarMadre.isSelected()){
            try{
                tutor = mngTutor.nuevoTutor(ocupacion, tipoDniT, telefonoPersonal, telefonoTrabajo, relacion, atutorados, retiros, dniT, apellidoYNombreT);
                tutores.add(tutor);
            }
            catch (Exception es){
                JOptionPane.showMessageDialog(null,es.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }
        //Segundo paso: Madre
        ocupacion = ""; tipoDniT = ""; relacion = "Madre";
        apellidoYNombreT = "";
        dniT = 0;
        telefonoPersonal = 0; telefonoTrabajo = 0;
        
        if(!error){
            apellidoYNombreT = jTextField_ApyNom_Madre.getText();
            if(apellidoYNombreT.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Nombre de la madre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            tipoDniT = jTextField_TipoDoc_Madre.getText();
            if(tipoDniT.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"Tipo DNI del madre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                dniT = new Integer (jTextField_NumDoc_Madre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            ocupacion = jTextField_Ocupacion_Madre.getText();
            if(ocupacion.isEmpty()){
                error = true;
                JOptionPane.showMessageDialog(null,"ocupacion de la madre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error){
            try{
                telefonoPersonal = new Long(jTextField_TelPer_Madre.getText());
                telefonoTrabajo = new Long(jTextField_TelTra_Madre.getText());
            }
            catch(java.lang.NumberFormatException e){
                 error = true;
                JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
            }
        }
        if(!error && jRadioButtonAgregarMadre.isSelected()){
            try{
                tutor = mngTutor.nuevoTutor(ocupacion, tipoDniT, telefonoPersonal, telefonoTrabajo, relacion, atutorados, retiros, dniT, apellidoYNombreT);
                tutores.add(tutor);
            }
            catch (Exception es){
                JOptionPane.showMessageDialog(null,es.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }
        //Paso 3 solo si esta selecionado incluir tutor que no sean los padres
        if(!error && jRadioButtonAgregarTutor.isSelected()){
            ocupacion = ""; tipoDniT = ""; relacion = "Tutor";
            apellidoYNombreT = "";
            dniT = 0;
            telefonoPersonal = 0; telefonoTrabajo = 0;

            if(!error){
                apellidoYNombreT = jTextField_ApyNom_Tutor.getText();
                if(apellidoYNombreT.isEmpty()){
                    error = true;
                    JOptionPane.showMessageDialog(null,"Nombre de la madre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                tipoDniT = jTextField_TipoDoc_Tutor.getText();
                if(tipoDniT.isEmpty()){
                    error = true;
                    JOptionPane.showMessageDialog(null,"Tipo DNI del madre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                try{
                    dniT = new Integer (jTextField_NumDoc_Tutor.getText());
                }
                catch(java.lang.NumberFormatException e){
                     error = true;
                    JOptionPane.showMessageDialog(null,"DNI solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                ocupacion = jTextField_Ocupacion_Tutor.getText();
                if(ocupacion.isEmpty()){
                    error = true;
                    JOptionPane.showMessageDialog(null,"ocupacion de la madre no puede ser vacÃ­o", "Campo incompleto",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error){
                try{
                    telefonoPersonal = new Long(jTextField_TelPer_Tutor.getText());
                    telefonoTrabajo = new Long(jTextField_TelTra_Tutor.getText());
                }
                catch(java.lang.NumberFormatException e){
                    error = true;
                    JOptionPane.showMessageDialog(null,"Telefono solo puede contener numeros", "Campo erroneo",JOptionPane.WARNING_MESSAGE);
                }
            }
            if(!error && jRadioButtonAgregarTutor.isSelected()){
                try{
                    tutor = mngTutor.nuevoTutor(ocupacion, tipoDniT, telefonoPersonal, telefonoTrabajo, relacion, atutorados, retiros, dniT, apellidoYNombreT);
                    tutores.add(tutor);
                }
                catch (Exception es){
                    JOptionPane.showMessageDialog(null,es.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                    error = true;
                }
            }
              
        }
        if(!error){
            try{
                
                alumno = mngAlumno.nuevoAlumno(fechaDeNacimiento, lugarNacimiento, domicilio, telefono, controlMedico, vacunas, controlNatacion, traeMateriales, otrosDatos, hermanos, tutores, pagos, salas, ra, dni, apellidoYNombre);
                JOptionPane.showMessageDialog(null,"El alumno ha sido Inscripto correctamente", "Inscripto",JOptionPane.INFORMATION_MESSAGE);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            }
    }//GEN-LAST:event_jButton_InscribirActionPerformed

    private void jDateChooserFechaNacimientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserFechaNacimientoPropertyChange
        Date fechaDeNacimiento = jDateChooserFechaNacimiento.getDate();
        String edad = Alumno.getEdad(fechaDeNacimiento);
        jTextField_Edad.setText(edad);
    }//GEN-LAST:event_jDateChooserFechaNacimientoPropertyChange

    private void jRadioButtonAgregarTutorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonAgregarTutorStateChanged
        if(jRadioButtonAgregarTutor.isSelected()){
            jLabel28.setEnabled(true);
            jLabel29.setEnabled(true);
            jLabel30.setEnabled(true);
            jLabel31.setEnabled(true);
            jLabel32.setEnabled(true);
            jLabel47.setEnabled(true);
            jLabel48.setEnabled(true);
            jTextField_ApyNom_Tutor.setEnabled(true);
            jTextField_TipoDoc_Tutor.setEnabled(true);
            jTextField_NumDoc_Tutor.setEnabled(true);
            jTextField_Ocupacion_Tutor.setEnabled(true);
            jTextField_Relacion.setEnabled(true);
            jTextField_TelPer_Tutor.setEnabled(true);
            jTextField_TelTra_Tutor.setEnabled(true);
        }
        else{
            jLabel28.setEnabled(false);
            jLabel29.setEnabled(false);
            jLabel30.setEnabled(false);
            jLabel31.setEnabled(false);
            jLabel32.setEnabled(false);
            jLabel47.setEnabled(false);
            jLabel48.setEnabled(false);
            jTextField_ApyNom_Tutor.setEnabled(false);
            jTextField_TipoDoc_Tutor.setEnabled(false);
            jTextField_NumDoc_Tutor.setEnabled(false);
            jTextField_Ocupacion_Tutor.setEnabled(false);
            jTextField_Relacion.setEnabled(false);
            jTextField_TelPer_Tutor.setEnabled(false);
            jTextField_TelTra_Tutor.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButtonAgregarTutorStateChanged

    private void jRadioButtonAgregarPadreStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonAgregarPadreStateChanged
        if(jRadioButtonAgregarPadre.isSelected()){
            jLabel17.setEnabled(true);
            jLabel18.setEnabled(true);
            jLabel19.setEnabled(true);
            jLabel20.setEnabled(true);
            jLabel42.setEnabled(true);
            jLabel44.setEnabled(true);
            jTextField_ApyNom_Padre.setEnabled(true);
            jTextField_TipoDoc_Padre.setEnabled(true);
            jTextField_NumDoc_Padre.setEnabled(true);
            jTextField_Ocupacion_Padre.setEnabled(true);
            jTextField_TelPer_Padre.setEnabled(true);
            jTextField_TelTra_Padre.setEnabled(true);
        }
        else{
            jLabel17.setEnabled(false);
            jLabel18.setEnabled(false);
            jLabel19.setEnabled(false);
            jLabel20.setEnabled(false);
            jLabel42.setEnabled(false);
            jLabel44.setEnabled(false);
            jTextField_ApyNom_Padre.setEnabled(false);
            jTextField_TipoDoc_Padre.setEnabled(false);
            jTextField_NumDoc_Padre.setEnabled(false);
            jTextField_Ocupacion_Padre.setEnabled(false);
            jTextField_TelPer_Padre.setEnabled(false);
            jTextField_TelTra_Padre.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButtonAgregarPadreStateChanged

    private void jTextFieldBusqueda_PagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusqueda_PagoKeyReleased
        cargarTabla();
    }//GEN-LAST:event_jTextFieldBusqueda_PagoKeyReleased

    private void jComboBoxSalaPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSalaPagoItemStateChanged
        cargarTabla();
    }//GEN-LAST:event_jComboBoxSalaPagoItemStateChanged

    private void jComboBoxTurnoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTurnoPagoItemStateChanged
        cargarTabla();
    }//GEN-LAST:event_jComboBoxTurnoPagoItemStateChanged

    private void jComboBoxBusqueda_PagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBusqueda_PagoItemStateChanged
        cargarTabla();
    }//GEN-LAST:event_jComboBoxBusqueda_PagoItemStateChanged

    private void jTablePagoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePagoMouseClicked
        String apellidoFila = String.valueOf(model.getValueAt(jTablePago.getSelectedRow(),0));
        String dniFila = String.valueOf(model.getValueAt(jTablePago.getSelectedRow(),1));
        String salaFila = String.valueOf(model.getValueAt(jTablePago.getSelectedRow(),2));
        String turnoFila = String.valueOf(model.getValueAt(jTablePago.getSelectedRow(),3));
        Iterator i = listaAlumnos.iterator();
        while(i.hasNext()){
            Alumno a = (Alumno) i.next();
            if(dniFila.equals(String.valueOf(a.getDni()))){
                jTextField_NomyAp_PagoIns.setText(apellidoFila);
                jTextField_Sala_PagoIns.setText(salaFila);
                jTextField_Turno_PagoIns.setText(turnoFila);
                jLabelMontoAPagar.setText("$ 58,50");
                jLabelMontoCuota.setText("$73,80");
                jLabelTotalPagado.setText("$90,66");
                break;
            }
        }
    }//GEN-LAST:event_jTablePagoMouseClicked


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRegistrarPago;
    private javax.swing.JButton jButton_Inscribir;
    private javax.swing.JCheckBox jCheckBoxMedico;
    private javax.swing.JCheckBox jCheckBoxNatacion;
    private javax.swing.JCheckBox jCheckBoxTraeMateriales;
    private javax.swing.JCheckBox jCheckBoxVacunas;
    private javax.swing.JComboBox<String> jComboBoxBusqueda_Pago;
    private javax.swing.JComboBox<String> jComboBoxSalaPago;
    private javax.swing.JComboBox<String> jComboBoxSala_Insc;
    private javax.swing.JComboBox<String> jComboBoxTipoDePago;
    private javax.swing.JComboBox<String> jComboBoxTurnoPago;
    private javax.swing.JComboBox<String> jComboBoxTurno_Insc;
    private com.toedter.calendar.JDateChooser jDateChooserFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMontoAPagar;
    private javax.swing.JLabel jLabelMontoCuota;
    private javax.swing.JLabel jLabelTotalPagado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBarraSup;
    private javax.swing.JPanel jPanelCard;
    private javax.swing.JPanel jPanelCerrar;
    private javax.swing.JPanel jPanelCuota;
    private javax.swing.JPanel jPanelDatosAlumnos;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JPanel jPanelInscripcion;
    private javax.swing.JPanel jPanelInterseccion;
    private javax.swing.JPanel jPanelMinimizar;
    private javax.swing.JPanel jPanelOpDatosAlumnos;
    private javax.swing.JPanel jPanelOpInscripcion;
    private javax.swing.JPanel jPanelOpPago;
    private javax.swing.JPanel jPanelPago;
    private javax.swing.JPanel jPanelPagpInsc;
    private javax.swing.JPanel jPanelPestanas;
    private javax.swing.JPanel jPanelTipoPago;
    private javax.swing.JPanel jPanelTitulo;
    private javax.swing.JRadioButton jRadioButtonAgregarMadre;
    private javax.swing.JRadioButton jRadioButtonAgregarPadre;
    private javax.swing.JRadioButton jRadioButtonAgregarTutor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSpinner jSpinner_Cuotas_PagoIns;
    private javax.swing.JTable jTablePago;
    private javax.swing.JTextArea jTextAreaOtrosDatos;
    private javax.swing.JTextField jTextFieldBusqueda_Pago;
    private javax.swing.JTextField jTextField_ApyNom;
    private javax.swing.JTextField jTextField_ApyNom_Madre;
    private javax.swing.JTextField jTextField_ApyNom_Padre;
    private javax.swing.JTextField jTextField_ApyNom_Tutor;
    private javax.swing.JTextField jTextField_DNI_Ins;
    private javax.swing.JTextField jTextField_Domicilio;
    private javax.swing.JTextField jTextField_Edad;
    private javax.swing.JTextField jTextField_LugarNacimiento;
    private javax.swing.JTextField jTextField_NomyAp_PagoIns;
    private javax.swing.JTextField jTextField_NumDoc_Madre;
    private javax.swing.JTextField jTextField_NumDoc_Padre;
    private javax.swing.JTextField jTextField_NumDoc_Tutor;
    private javax.swing.JTextField jTextField_Ocupacion_Madre;
    private javax.swing.JTextField jTextField_Ocupacion_Padre;
    private javax.swing.JTextField jTextField_Ocupacion_Tutor;
    private javax.swing.JTextField jTextField_Relacion;
    private javax.swing.JTextField jTextField_Sala_PagoIns;
    private javax.swing.JTextField jTextField_TelPer_Madre;
    private javax.swing.JTextField jTextField_TelPer_Padre;
    private javax.swing.JTextField jTextField_TelPer_Tutor;
    private javax.swing.JTextField jTextField_TelTra_Madre;
    private javax.swing.JTextField jTextField_TelTra_Padre;
    private javax.swing.JTextField jTextField_TelTra_Tutor;
    private javax.swing.JTextField jTextField_Telefono;
    private javax.swing.JTextField jTextField_TipoDoc_Madre;
    private javax.swing.JTextField jTextField_TipoDoc_Padre;
    private javax.swing.JTextField jTextField_TipoDoc_Tutor;
    private javax.swing.JTextField jTextField_Turno_PagoIns;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    // End of variables declaration//GEN-END:variables
    
    public void cargarTabla(){
        String valorComboBox1 = jComboBoxBusqueda_Pago.getSelectedItem().toString();
        String buscado = jTextFieldBusqueda_Pago.getText().toUpperCase();
        model.setRowCount(0);
        switch(jComboBoxSalaPago.getSelectedIndex()){
            case 0:
                    switch(jComboBoxTurnoPago.getSelectedIndex()){
                        case 0:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    if(valorComboBox1.equals("Apellido y Nombre")){
                                        String nombre = a.getApellidoYNombre().toUpperCase();
                                        if(nombre.contains(buscado)){
                                            int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                            model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),a.getSalas().get(aÃ±o).getTurno()});
                                        }
                                    }
                                    else{
                                        String dni = String.valueOf(a.getDni());
                                        if(dni.contains(buscado)){
                                            int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                            model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),a.getSalas().get(aÃ±o).getTurno()});
                                        } 
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    String turno = a.getSalas().get(aÃ±o).getTurno();
                                    if(turno.equalsIgnoreCase("MaÃ±ana"))
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),turno});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    String turno = a.getSalas().get(aÃ±o).getTurno();
                                    if(turno.equalsIgnoreCase("MaÃ±ana")){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),turno});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),turno});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    String turno = a.getSalas().get(aÃ±o).getTurno();
                                    if(turno.equalsIgnoreCase("Tarde"))
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),turno});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    String turno = a.getSalas().get(aÃ±o).getTurno();
                                    if(turno.equalsIgnoreCase("Tarde")){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),turno});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),a.getSalas().get(aÃ±o).getEdad(),turno});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                    }
                    break;
            case 1:
                    switch(jComboBoxTurnoPago.getSelectedIndex()){
                        case 0:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    if(edad == 5)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    if(edad == 5){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 5)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 5){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 6)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 6){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                    }
                    break;
            case 2:
                    switch(jComboBoxTurnoPago.getSelectedIndex()){
                        case 0:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    if(edad == 4)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    if(edad == 4){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 3)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 3){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 4)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 4){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;         
                    }
                    break;
            case 3:
                    switch(jComboBoxTurnoPago.getSelectedIndex()){
                        case 0:    
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    if(edad == 3)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    if(edad == 3){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 1:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 1)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 1){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break;
                        case 2:
                            if(buscado.equals("")){
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 2)
                                        model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                }
                            }
                            else{
                                Iterator i = listaAlumnos.listIterator();
                                while(i.hasNext()){
                                    Alumno a = (Alumno) i.next();
                                    int aÃ±o = a.obtenerUltimoAÃ±oLectivo();
                                    int edad = a.getSalas().get(aÃ±o).getEdad();
                                    int idSala = a.getSalas().get(aÃ±o).getIdSala();
                                    if(idSala == 2){
                                        if(valorComboBox1.equals("Apellido y Nombre")){
                                            String nombre = a.getApellidoYNombre().toUpperCase();
                                            if(nombre.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            }
                                        }
                                        else{
                                            String dni = String.valueOf(a.getDni());
                                            if(dni.contains(buscado)){
                                                model.addRow(new Object[]{a.getApellidoYNombre(),a.getDni(),edad,a.getSalas().get(aÃ±o).getTurno()});
                                            } 
                                        }
                                    }
                                }
                            }
                            break; 
                    }
                    break;
        }
    }
}

